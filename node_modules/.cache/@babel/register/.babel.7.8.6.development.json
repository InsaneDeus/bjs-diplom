{
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    PUBLIC_PATH = _process$env.PUBLIC_PATH,\n    INDEX_FILE = _process$env.INDEX_FILE,\n    HOME_FILE = _process$env.HOME_FILE;\n\nvar path = require('path');\n\nvar express = require('express');\n\nvar morgan = require('morgan');\n\nvar bodyParser = require('body-parser');\n\nvar cookieParser = require('cookie-parser');\n\nvar cookieSession = require('cookie-session');\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar db = low(new FileSync('db.json'));\n\nfunction setDefaultUser(database) {\n  database.defaults({\n    users: [{\n      created_at: '2019-10-15T05:28:25.593Z',\n      login: 'oleg@demo.ru',\n      password: 'demo',\n      id: 1,\n      balance: {\n        RUB: 1000,\n        USD: 20,\n        EUR: 20,\n        NTC: 3000\n      }\n    }, {\n      created_at: '2019-11-16T05:28:25.593Z',\n      login: 'ivan@demo.ru',\n      password: 'demo',\n      id: 2,\n      netocoins: 100,\n      balance: {\n        RUB: 20,\n        USD: 0,\n        EUR: 0,\n        NTC: 100\n      }\n    }, {\n      created_at: '2019-5-14T05:28:25.593Z',\n      login: 'petr@demo.ru',\n      password: 'demo',\n      id: 3,\n      balance: {\n        RUB: 20000,\n        USD: 300,\n        EUR: 500,\n        NTC: 50000\n      }\n    }, {\n      created_at: '2020-1-15T05:28:25.593Z',\n      login: 'galina@demo.ru',\n      password: 'demo',\n      id: 4,\n      balance: {\n        RUB: 30000,\n        USD: 150,\n        EUR: 300,\n        NTC: 20000\n      }\n    }, {\n      created_at: '2020-2-16T05:28:25.593Z',\n      login: 'vladimir@demo.ru',\n      password: 'demo',\n      id: 5,\n      balance: {\n        RUB: 60000,\n        USD: 500,\n        EUR: 600,\n        NTC: 90000\n      }\n    }],\n    favorites: {\n      1: {\n        2: 'Ваня дурачок',\n        3: 'Пират Петр'\n      },\n      2: {\n        1: 'Чувак, который должен 20к неткойнов',\n        3: 'Партнёр по бизнесу'\n      },\n      3: {\n        2: 'Важный клиент'\n      },\n      5: {\n        1: 'Важный пацан',\n        3: 'Дедуля',\n        4: 'Галя'\n      }\n    }\n  }).write();\n}\n\nif (!db.get('users').value()) setDefaultUser(db);\nvar app = express();\napp.use(cookieParser());\napp.use(cookieSession({\n  name: 'session',\n  keys: ['authorized', 'login']\n}));\napp.use(morgan('tiny'));\napp.use(express[\"static\"](\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH)));\n\nvar api = require('./routes');\n\napp.use(bodyParser.json());\napp.use('/', api);\napp.use(morgan('tiny'));\napp.get('*', function (request, response) {\n  if (request.session.authorized) {\n    response.sendFile(path.resolve(\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH), HOME_FILE));\n  } else {\n    response.sendFile(path.resolve(\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH), INDEX_FILE));\n  }\n}); // eslint-disable-next-line no-console\n\napp.listen(PORT, function () {\n  return console.log(\"Server started at \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "process",
        "env",
        "PORT",
        "PUBLIC_PATH",
        "INDEX_FILE",
        "HOME_FILE",
        "path",
        "express",
        "morgan",
        "bodyParser",
        "cookieParser",
        "cookieSession",
        "low",
        "FileSync",
        "db",
        "setDefaultUser",
        "database",
        "defaults",
        "users",
        "created_at",
        "login",
        "password",
        "id",
        "balance",
        "RUB",
        "USD",
        "EUR",
        "NTC",
        "netocoins",
        "favorites",
        "write",
        "get",
        "value",
        "app",
        "use",
        "name",
        "keys",
        "__dirname",
        "api",
        "json",
        "request",
        "response",
        "session",
        "authorized",
        "sendFile",
        "resolve",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;mBAIIC,OAAO,CAACC,G;IADVC,I,gBAAAA,I;IAAMC,W,gBAAAA,W;IAAaC,U,gBAAAA,U;IAAYC,S,gBAAAA,S;;AAEjC,IAAMC,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMS,OAAO,GAAGT,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMU,MAAM,GAAGV,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMW,UAAU,GAAGX,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMY,YAAY,GAAGZ,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMa,aAAa,GAAGb,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMc,GAAG,GAAGd,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMe,QAAQ,GAAGf,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAMgB,EAAE,GAAGF,GAAG,CAAC,IAAIC,QAAJ,CAAa,SAAb,CAAD,CAAd;;AAEA,SAASE,cAAT,CAAwBC,QAAxB,EAAkC;AAChCA,EAAAA,QAAQ,CAACC,QAAT,CAAkB;AAChBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,UAAU,EAAE,0BADd;AAEEC,MAAAA,KAAK,EAAE,cAFT;AAGEC,MAAAA,QAAQ,EAAE,MAHZ;AAIEC,MAAAA,EAAE,EAAE,CAJN;AAKEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,IADE;AACIC,QAAAA,GAAG,EAAE,EADT;AACaC,QAAAA,GAAG,EAAE,EADlB;AACsBC,QAAAA,GAAG,EAAE;AAD3B;AALX,KADK,EASF;AACDR,MAAAA,UAAU,EAAE,0BADX;AAEDC,MAAAA,KAAK,EAAE,cAFN;AAGDC,MAAAA,QAAQ,EAAE,MAHT;AAIDC,MAAAA,EAAE,EAAE,CAJH;AAKDM,MAAAA,SAAS,EAAE,GALV;AAMDL,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,EADE;AACEC,QAAAA,GAAG,EAAE,CADP;AACUC,QAAAA,GAAG,EAAE,CADf;AACkBC,QAAAA,GAAG,EAAE;AADvB;AANR,KATE,EAkBF;AACDR,MAAAA,UAAU,EAAE,yBADX;AAEDC,MAAAA,KAAK,EAAE,cAFN;AAGDC,MAAAA,QAAQ,EAAE,MAHT;AAIDC,MAAAA,EAAE,EAAE,CAJH;AAKDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AACKC,QAAAA,GAAG,EAAE,GADV;AACeC,QAAAA,GAAG,EAAE,GADpB;AACyBC,QAAAA,GAAG,EAAE;AAD9B;AALR,KAlBE,EA0BF;AACDR,MAAAA,UAAU,EAAE,yBADX;AAEDC,MAAAA,KAAK,EAAE,gBAFN;AAGDC,MAAAA,QAAQ,EAAE,MAHT;AAIDC,MAAAA,EAAE,EAAE,CAJH;AAKDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AACKC,QAAAA,GAAG,EAAE,GADV;AACeC,QAAAA,GAAG,EAAE,GADpB;AACyBC,QAAAA,GAAG,EAAE;AAD9B;AALR,KA1BE,EAkCF;AACDR,MAAAA,UAAU,EAAE,yBADX;AAEDC,MAAAA,KAAK,EAAE,kBAFN;AAGDC,MAAAA,QAAQ,EAAE,MAHT;AAIDC,MAAAA,EAAE,EAAE,CAJH;AAKDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AACKC,QAAAA,GAAG,EAAE,GADV;AACeC,QAAAA,GAAG,EAAE,GADpB;AACyBC,QAAAA,GAAG,EAAE;AAD9B;AALR,KAlCE,CADS;AA6ChBE,IAAAA,SAAS,EAAE;AACT,SAAG;AAAE,WAAG,cAAL;AAAqB,WAAG;AAAxB,OADM;AAET,SAAG;AAAE,WAAG,qCAAL;AAA4C,WAAG;AAA/C,OAFM;AAGT,SAAG;AAAE,WAAG;AAAL,OAHM;AAIT,SAAG;AAAE,WAAG,cAAL;AAAqB,WAAG,QAAxB;AAAkC,WAAG;AAArC;AAJM;AA7CK,GAAlB,EAmDGC,KAnDH;AAoDD;;AAED,IAAI,CAAChB,EAAE,CAACiB,GAAH,CAAO,OAAP,EAAgBC,KAAhB,EAAL,EAA8BjB,cAAc,CAACD,EAAD,CAAd;AAE9B,IAAMmB,GAAG,GAAG1B,OAAO,EAAnB;AACA0B,GAAG,CAACC,GAAJ,CAAQxB,YAAY,EAApB;AACAuB,GAAG,CAACC,GAAJ,CAAQvB,aAAa,CAAC;AACpBwB,EAAAA,IAAI,EAAE,SADc;AAEpBC,EAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,OAAf;AAFc,CAAD,CAArB;AAIAH,GAAG,CAACC,GAAJ,CAAQ1B,MAAM,CAAC,MAAD,CAAd;AACAyB,GAAG,CAACC,GAAJ,CAAQ3B,OAAO,UAAP,WAAkB8B,SAAlB,cAA+BlC,WAA/B,EAAR;;AAEA,IAAMmC,GAAG,GAAGxC,OAAO,CAAC,UAAD,CAAnB;;AAEAmC,GAAG,CAACC,GAAJ,CAAQzB,UAAU,CAAC8B,IAAX,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaI,GAAb;AACAL,GAAG,CAACC,GAAJ,CAAQ1B,MAAM,CAAC,MAAD,CAAd;AAEAyB,GAAG,CAACF,GAAJ,CAAQ,GAAR,EAAa,UAACS,OAAD,EAAUC,QAAV,EAAuB;AAClC,MAAID,OAAO,CAACE,OAAR,CAAgBC,UAApB,EAAgC;AAC9BF,IAAAA,QAAQ,CAACG,QAAT,CAAkBtC,IAAI,CAACuC,OAAL,WAAgBR,SAAhB,cAA6BlC,WAA7B,GAA4CE,SAA5C,CAAlB;AACD,GAFD,MAEO;AACLoC,IAAAA,QAAQ,CAACG,QAAT,CAAkBtC,IAAI,CAACuC,OAAL,WAAgBR,SAAhB,cAA6BlC,WAA7B,GAA4CC,UAA5C,CAAlB;AACD;AACF,CAND,E,CAQA;;AACA6B,GAAG,CAACa,MAAJ,CAAW5C,IAAX,EAAiB;AAAA,SAAM6C,OAAO,CAACC,GAAR,6BAAiC9C,IAAjC,EAAN;AAAA,CAAjB",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourcesContent": [
        "require('dotenv').config();\n\nconst {\n  PORT, PUBLIC_PATH, INDEX_FILE, HOME_FILE,\n} = process.env;\nconst path = require('path');\nconst express = require('express');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\nconst cookieSession = require('cookie-session');\nconst low = require('lowdb');\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst db = low(new FileSync('db.json'));\n\nfunction setDefaultUser(database) {\n  database.defaults({\n    users: [\n      {\n        created_at: '2019-10-15T05:28:25.593Z',\n        login: 'oleg@demo.ru',\n        password: 'demo',\n        id: 1,\n        balance: {\n          RUB: 1000, USD: 20, EUR: 20, NTC: 3000,\n        },\n      }, {\n        created_at: '2019-11-16T05:28:25.593Z',\n        login: 'ivan@demo.ru',\n        password: 'demo',\n        id: 2,\n        netocoins: 100,\n        balance: {\n          RUB: 20, USD: 0, EUR: 0, NTC: 100,\n        },\n      }, {\n        created_at: '2019-5-14T05:28:25.593Z',\n        login: 'petr@demo.ru',\n        password: 'demo',\n        id: 3,\n        balance: {\n          RUB: 20000, USD: 300, EUR: 500, NTC: 50000,\n        },\n      }, {\n        created_at: '2020-1-15T05:28:25.593Z',\n        login: 'galina@demo.ru',\n        password: 'demo',\n        id: 4,\n        balance: {\n          RUB: 30000, USD: 150, EUR: 300, NTC: 20000,\n        },\n      }, {\n        created_at: '2020-2-16T05:28:25.593Z',\n        login: 'vladimir@demo.ru',\n        password: 'demo',\n        id: 5,\n        balance: {\n          RUB: 60000, USD: 500, EUR: 600, NTC: 90000,\n        },\n      },\n    ],\n    favorites: {\n      1: { 2: 'Ваня дурачок', 3: 'Пират Петр' },\n      2: { 1: 'Чувак, который должен 20к неткойнов', 3: 'Партнёр по бизнесу' },\n      3: { 2: 'Важный клиент' },\n      5: { 1: 'Важный пацан', 3: 'Дедуля', 4: 'Галя' },\n    },\n  }).write();\n}\n\nif (!db.get('users').value()) setDefaultUser(db);\n\nconst app = express();\napp.use(cookieParser());\napp.use(cookieSession({\n  name: 'session',\n  keys: ['authorized', 'login'],\n}));\napp.use(morgan('tiny'));\napp.use(express.static(`${__dirname}/${PUBLIC_PATH}`));\n\nconst api = require('./routes');\n\napp.use(bodyParser.json());\napp.use('/', api);\napp.use(morgan('tiny'));\n\napp.get('*', (request, response) => {\n  if (request.session.authorized) {\n    response.sendFile(path.resolve(`${__dirname}/${PUBLIC_PATH}`, HOME_FILE));\n  } else {\n    response.sendFile(path.resolve(`${__dirname}/${PUBLIC_PATH}`, INDEX_FILE));\n  }\n});\n\n// eslint-disable-next-line no-console\napp.listen(PORT, () => console.log(`Server started at ${PORT}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045598268
  },
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _stocks = _interopRequireDefault(require(\"./stocks\"));\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _favorites = _interopRequireDefault(require(\"./favorites\"));\n\nvar _money = _interopRequireDefault(require(\"./money\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nrouter.use('/user', _user[\"default\"]);\nrouter.use('/favorites', _favorites[\"default\"]);\nrouter.use('/money', _money[\"default\"]);\nrouter.get('/stocks', function (request, response) {\n  (0, _stocks[\"default\"])(function (data) {\n    return response.json(data);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJ1c2VyIiwiZmF2b3JpdGVzIiwibW9uZXkiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJkYXRhIiwianNvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLE9BQVgsRUFBb0JDLGdCQUFwQjtBQUNBSixNQUFNLENBQUNHLEdBQVAsQ0FBVyxZQUFYLEVBQXlCRSxxQkFBekI7QUFDQUwsTUFBTSxDQUFDRyxHQUFQLENBQVcsUUFBWCxFQUFxQkcsaUJBQXJCO0FBRUFOLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQzNDLDBCQUFVLFVBQUNDLElBQUQ7QUFBQSxXQUFVRCxRQUFRLENBQUNFLElBQVQsQ0FBY0QsSUFBZCxDQUFWO0FBQUEsR0FBVjtBQUNELENBRkQ7QUFJQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxc0JzQvtGRXFzQndC10YLQvtC70L7Qs9C40Y9cXEJKU1xcYmpzLWRpcGxvbVxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgZ2V0U3RvY2tzIGZyb20gJy4vc3RvY2tzJztcbmltcG9ydCB1c2VyIGZyb20gJy4vdXNlcic7XG5pbXBvcnQgZmF2b3JpdGVzIGZyb20gJy4vZmF2b3JpdGVzJztcbmltcG9ydCBtb25leSBmcm9tICcuL21vbmV5JztcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci51c2UoJy91c2VyJywgdXNlcik7XG5yb3V0ZXIudXNlKCcvZmF2b3JpdGVzJywgZmF2b3JpdGVzKTtcbnJvdXRlci51c2UoJy9tb25leScsIG1vbmV5KTtcblxucm91dGVyLmdldCgnL3N0b2NrcycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBnZXRTdG9ja3MoKGRhdGEpID0+IHJlc3BvbnNlLmpzb24oZGF0YSkpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "user",
        "favorites",
        "money",
        "get",
        "request",
        "response",
        "data",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AACAF,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBC,gBAApB;AACAJ,MAAM,CAACG,GAAP,CAAW,YAAX,EAAyBE,qBAAzB;AACAL,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqBG,iBAArB;AAEAN,MAAM,CAACO,GAAP,CAAW,SAAX,EAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC3C,0BAAU,UAACC,IAAD;AAAA,WAAUD,QAAQ,CAACE,IAAT,CAAcD,IAAd,CAAV;AAAA,GAAV;AACD,CAFD;AAIAE,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport getStocks from './stocks';\nimport user from './user';\nimport favorites from './favorites';\nimport money from './money';\n\nconst router = express.Router();\nrouter.use('/user', user);\nrouter.use('/favorites', favorites);\nrouter.use('/money', money);\n\nrouter.get('/stocks', (request, response) => {\n  getStocks((data) => response.json(data));\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045648499
  },
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\\\\stocks.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\stocks.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\stocks.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\stocks.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
        "sourceFileName": "stocks.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar request = require('request');\n\nfunction getStocks(callback) {\n  var url = 'https://www.cbr-xml-daily.ru/daily_json.js';\n  request({\n    method: 'GET',\n    url: url\n  }, function (error, bankResponse, body) {\n    if (!error && bankResponse.statusCode === 200) {\n      var parsed = JSON.parse(body);\n      var usd = parsed.Valute.USD.Value;\n      var eur = parsed.Valute.EUR.Value;\n      var ntc = Number.parseFloat((parsed.Valute.XDR.Value / 10).toFixed(4));\n      callback({\n        success: true,\n        data: {\n          RUB_USD: usd,\n          RUB_EUR: eur,\n          RUB_NTC: ntc,\n          USD_RUB: +(1 / usd).toFixed(5),\n          USD_EUR: +(usd / eur).toFixed(5),\n          USD_NTC: +(usd / ntc).toFixed(5),\n          EUR_RUB: +(1 / eur).toFixed(5),\n          EUR_USD: +(eur / usd).toFixed(5),\n          EUR_NTC: +(eur / ntc).toFixed(5),\n          NTC_RUB: +(1 / ntc).toFixed(5),\n          NTC_USD: +(ntc / usd).toFixed(5),\n          NTC_EUR: +(ntc / eur).toFixed(5)\n        }\n      });\n    } else callback({\n      success: false,\n      data: error\n    });\n  });\n}\n\nmodule.exports = getStocks;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b2Nrcy5qcyJdLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsImdldFN0b2NrcyIsImNhbGxiYWNrIiwidXJsIiwibWV0aG9kIiwiZXJyb3IiLCJiYW5rUmVzcG9uc2UiLCJib2R5Iiwic3RhdHVzQ29kZSIsInBhcnNlZCIsIkpTT04iLCJwYXJzZSIsInVzZCIsIlZhbHV0ZSIsIlVTRCIsIlZhbHVlIiwiZXVyIiwiRVVSIiwibnRjIiwiTnVtYmVyIiwicGFyc2VGbG9hdCIsIlhEUiIsInRvRml4ZWQiLCJzdWNjZXNzIiwiZGF0YSIsIlJVQl9VU0QiLCJSVUJfRVVSIiwiUlVCX05UQyIsIlVTRF9SVUIiLCJVU0RfRVVSIiwiVVNEX05UQyIsIkVVUl9SVUIiLCJFVVJfVVNEIiwiRVVSX05UQyIsIk5UQ19SVUIiLCJOVENfVVNEIiwiTlRDX0VVUiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxTQUFTQyxTQUFULENBQW1CQyxRQUFuQixFQUE2QjtBQUMzQixNQUFNQyxHQUFHLEdBQUcsNENBQVo7QUFDQUosRUFBQUEsT0FBTyxDQUFDO0FBQ05LLElBQUFBLE1BQU0sRUFBRSxLQURGO0FBRU5ELElBQUFBLEdBQUcsRUFBSEE7QUFGTSxHQUFELEVBR0osVUFBQ0UsS0FBRCxFQUFRQyxZQUFSLEVBQXNCQyxJQUF0QixFQUErQjtBQUNoQyxRQUFJLENBQUNGLEtBQUQsSUFBVUMsWUFBWSxDQUFDRSxVQUFiLEtBQTRCLEdBQTFDLEVBQStDO0FBQzdDLFVBQU1DLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdKLElBQVgsQ0FBZjtBQUNBLFVBQU1LLEdBQUcsR0FBR0gsTUFBTSxDQUFDSSxNQUFQLENBQWNDLEdBQWQsQ0FBa0JDLEtBQTlCO0FBQ0EsVUFBTUMsR0FBRyxHQUFHUCxNQUFNLENBQUNJLE1BQVAsQ0FBY0ksR0FBZCxDQUFrQkYsS0FBOUI7QUFDQSxVQUFNRyxHQUFHLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBUCxDQUFrQixDQUFDWCxNQUFNLENBQUNJLE1BQVAsQ0FBY1EsR0FBZCxDQUFrQk4sS0FBbEIsR0FBMEIsRUFBM0IsRUFBK0JPLE9BQS9CLENBQXVDLENBQXZDLENBQWxCLENBQVo7QUFDQXBCLE1BQUFBLFFBQVEsQ0FBQztBQUNQcUIsUUFBQUEsT0FBTyxFQUFFLElBREY7QUFFUEMsUUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFVBQUFBLE9BQU8sRUFBRWIsR0FETDtBQUVKYyxVQUFBQSxPQUFPLEVBQUVWLEdBRkw7QUFHSlcsVUFBQUEsT0FBTyxFQUFFVCxHQUhMO0FBS0pVLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSWhCLEdBQUwsRUFBVVUsT0FBVixDQUFrQixDQUFsQixDQUxOO0FBTUpPLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUNqQixHQUFHLEdBQUdJLEdBQVAsRUFBWU0sT0FBWixDQUFvQixDQUFwQixDQU5OO0FBT0pRLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUNsQixHQUFHLEdBQUdNLEdBQVAsRUFBWUksT0FBWixDQUFvQixDQUFwQixDQVBOO0FBU0pTLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSWYsR0FBTCxFQUFVTSxPQUFWLENBQWtCLENBQWxCLENBVE47QUFVSlUsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2hCLEdBQUcsR0FBR0osR0FBUCxFQUFZVSxPQUFaLENBQW9CLENBQXBCLENBVk47QUFXSlcsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2pCLEdBQUcsR0FBR0UsR0FBUCxFQUFZSSxPQUFaLENBQW9CLENBQXBCLENBWE47QUFhSlksVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQyxJQUFJaEIsR0FBTCxFQUFVSSxPQUFWLENBQWtCLENBQWxCLENBYk47QUFjSmEsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2pCLEdBQUcsR0FBR04sR0FBUCxFQUFZVSxPQUFaLENBQW9CLENBQXBCLENBZE47QUFlSmMsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2xCLEdBQUcsR0FBR0YsR0FBUCxFQUFZTSxPQUFaLENBQW9CLENBQXBCO0FBZk47QUFGQyxPQUFELENBQVI7QUFvQkQsS0F6QkQsTUF5Qk9wQixRQUFRLENBQUM7QUFBRXFCLE1BQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCQyxNQUFBQSxJQUFJLEVBQUVuQjtBQUF4QixLQUFELENBQVI7QUFDUixHQTlCTSxDQUFQO0FBK0JEOztBQUVEZ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckMsU0FBakIiLCJzb3VyY2VSb290IjoiRDpcXNCc0L7RkVxc0J3QtdGC0L7Qu9C+0LPQuNGPXFxCSlNcXGJqcy1kaXBsb21cXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0Jyk7XG5cbmZ1bmN0aW9uIGdldFN0b2NrcyhjYWxsYmFjaykge1xuICBjb25zdCB1cmwgPSAnaHR0cHM6Ly93d3cuY2JyLXhtbC1kYWlseS5ydS9kYWlseV9qc29uLmpzJztcbiAgcmVxdWVzdCh7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgICB1cmwsXG4gIH0sIChlcnJvciwgYmFua1Jlc3BvbnNlLCBib2R5KSA9PiB7XG4gICAgaWYgKCFlcnJvciAmJiBiYW5rUmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGJvZHkpO1xuICAgICAgY29uc3QgdXNkID0gcGFyc2VkLlZhbHV0ZS5VU0QuVmFsdWU7XG4gICAgICBjb25zdCBldXIgPSBwYXJzZWQuVmFsdXRlLkVVUi5WYWx1ZTtcbiAgICAgIGNvbnN0IG50YyA9IE51bWJlci5wYXJzZUZsb2F0KChwYXJzZWQuVmFsdXRlLlhEUi5WYWx1ZSAvIDEwKS50b0ZpeGVkKDQpKTtcbiAgICAgIGNhbGxiYWNrKHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIFJVQl9VU0Q6IHVzZCxcbiAgICAgICAgICBSVUJfRVVSOiBldXIsXG4gICAgICAgICAgUlVCX05UQzogbnRjLFxuXG4gICAgICAgICAgVVNEX1JVQjogKygxIC8gdXNkKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIFVTRF9FVVI6ICsodXNkIC8gZXVyKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIFVTRF9OVEM6ICsodXNkIC8gbnRjKS50b0ZpeGVkKDUpLFxuXG4gICAgICAgICAgRVVSX1JVQjogKygxIC8gZXVyKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIEVVUl9VU0Q6ICsoZXVyIC8gdXNkKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIEVVUl9OVEM6ICsoZXVyIC8gbnRjKS50b0ZpeGVkKDUpLFxuXG4gICAgICAgICAgTlRDX1JVQjogKygxIC8gbnRjKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIE5UQ19VU0Q6ICsobnRjIC8gdXNkKS50b0ZpeGVkKDUpLFxuICAgICAgICAgIE5UQ19FVVI6ICsobnRjIC8gZXVyKS50b0ZpeGVkKDUpLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSBlbHNlIGNhbGxiYWNrKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6IGVycm9yIH0pO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRTdG9ja3M7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "stocks.js"
      ],
      "names": [
        "request",
        "require",
        "getStocks",
        "callback",
        "url",
        "method",
        "error",
        "bankResponse",
        "body",
        "statusCode",
        "parsed",
        "JSON",
        "parse",
        "usd",
        "Valute",
        "USD",
        "Value",
        "eur",
        "EUR",
        "ntc",
        "Number",
        "parseFloat",
        "XDR",
        "toFixed",
        "success",
        "data",
        "RUB_USD",
        "RUB_EUR",
        "RUB_NTC",
        "USD_RUB",
        "USD_EUR",
        "USD_NTC",
        "EUR_RUB",
        "EUR_USD",
        "EUR_NTC",
        "NTC_RUB",
        "NTC_USD",
        "NTC_EUR",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,MAAMC,GAAG,GAAG,4CAAZ;AACAJ,EAAAA,OAAO,CAAC;AACNK,IAAAA,MAAM,EAAE,KADF;AAEND,IAAAA,GAAG,EAAHA;AAFM,GAAD,EAGJ,UAACE,KAAD,EAAQC,YAAR,EAAsBC,IAAtB,EAA+B;AAChC,QAAI,CAACF,KAAD,IAAUC,YAAY,CAACE,UAAb,KAA4B,GAA1C,EAA+C;AAC7C,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAf;AACA,UAAMK,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcC,GAAd,CAAkBC,KAA9B;AACA,UAAMC,GAAG,GAAGP,MAAM,CAACI,MAAP,CAAcI,GAAd,CAAkBF,KAA9B;AACA,UAAMG,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkB,CAACX,MAAM,CAACI,MAAP,CAAcQ,GAAd,CAAkBN,KAAlB,GAA0B,EAA3B,EAA+BO,OAA/B,CAAuC,CAAvC,CAAlB,CAAZ;AACApB,MAAAA,QAAQ,CAAC;AACPqB,QAAAA,OAAO,EAAE,IADF;AAEPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAEb,GADL;AAEJc,UAAAA,OAAO,EAAEV,GAFL;AAGJW,UAAAA,OAAO,EAAET,GAHL;AAKJU,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIhB,GAAL,EAAUU,OAAV,CAAkB,CAAlB,CALN;AAMJO,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGI,GAAP,EAAYM,OAAZ,CAAoB,CAApB,CANN;AAOJQ,UAAAA,OAAO,EAAE,CAAC,CAAClB,GAAG,GAAGM,GAAP,EAAYI,OAAZ,CAAoB,CAApB,CAPN;AASJS,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIf,GAAL,EAAUM,OAAV,CAAkB,CAAlB,CATN;AAUJU,UAAAA,OAAO,EAAE,CAAC,CAAChB,GAAG,GAAGJ,GAAP,EAAYU,OAAZ,CAAoB,CAApB,CAVN;AAWJW,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGE,GAAP,EAAYI,OAAZ,CAAoB,CAApB,CAXN;AAaJY,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIhB,GAAL,EAAUI,OAAV,CAAkB,CAAlB,CAbN;AAcJa,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGN,GAAP,EAAYU,OAAZ,CAAoB,CAApB,CAdN;AAeJc,UAAAA,OAAO,EAAE,CAAC,CAAClB,GAAG,GAAGF,GAAP,EAAYM,OAAZ,CAAoB,CAApB;AAfN;AAFC,OAAD,CAAR;AAoBD,KAzBD,MAyBOpB,QAAQ,CAAC;AAAEqB,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,IAAI,EAAEnB;AAAxB,KAAD,CAAR;AACR,GA9BM,CAAP;AA+BD;;AAEDgC,MAAM,CAACC,OAAP,GAAiBrC,SAAjB",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "sourcesContent": [
        "const request = require('request');\n\nfunction getStocks(callback) {\n  const url = 'https://www.cbr-xml-daily.ru/daily_json.js';\n  request({\n    method: 'GET',\n    url,\n  }, (error, bankResponse, body) => {\n    if (!error && bankResponse.statusCode === 200) {\n      const parsed = JSON.parse(body);\n      const usd = parsed.Valute.USD.Value;\n      const eur = parsed.Valute.EUR.Value;\n      const ntc = Number.parseFloat((parsed.Valute.XDR.Value / 10).toFixed(4));\n      callback({\n        success: true,\n        data: {\n          RUB_USD: usd,\n          RUB_EUR: eur,\n          RUB_NTC: ntc,\n\n          USD_RUB: +(1 / usd).toFixed(5),\n          USD_EUR: +(usd / eur).toFixed(5),\n          USD_NTC: +(usd / ntc).toFixed(5),\n\n          EUR_RUB: +(1 / eur).toFixed(5),\n          EUR_USD: +(eur / usd).toFixed(5),\n          EUR_NTC: +(eur / ntc).toFixed(5),\n\n          NTC_RUB: +(1 / ntc).toFixed(5),\n          NTC_USD: +(ntc / usd).toFixed(5),\n          NTC_EUR: +(ntc / eur).toFixed(5),\n        },\n      });\n    } else callback({ success: false, data: error });\n  });\n}\n\nmodule.exports = getStocks;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045581571
  },
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\user.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar router = require('express').Router();\n\nvar multer = require('multer');\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar upload = multer();\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\nrouter.post('/register', upload.none(), function (request, response) {\n  var _request$body = request.body,\n      login = _request$body.login,\n      password = _request$body.password;\n  var error = '';\n\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({\n      success: false,\n      data: error\n    });\n    return;\n  }\n\n  var userDb = db.get('users');\n  var user = userDb.find({\n    login: login\n  }).value();\n\n  if (!user) {\n    var allUsers = userDb.value();\n    var maxId = 0;\n    allUsers.forEach(function (element) {\n      if (+element.id > maxId) {\n        maxId = element.id;\n      }\n    });\n    maxId += 1;\n    var registerUser = {\n      created_at: new Date().toISOString(),\n      login: login,\n      password: password,\n      id: maxId,\n      balance: {\n        RUB: 0,\n        USD: 0,\n        EUR: 0,\n        NTC: 0\n      }\n    };\n    db.get('users').push(registerUser).write();\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({\n      success: true,\n      userId: user.id\n    });\n  } else {\n    response.json({\n      success: false,\n      data: \"\\u041B\\u043E\\u0433\\u0438\\u043D \".concat(login, \" \\u0443\\u0436\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442.\")\n    });\n  }\n});\nrouter.post('/login', upload.none(), function (request, response) {\n  var _request$body2 = request.body,\n      login = _request$body2.login,\n      password = _request$body2.password;\n  var error = '';\n\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({\n      success: false,\n      data: error\n    });\n    return;\n  }\n\n  var user = db.get('users').find({\n    login: login,\n    password: password\n  }).value();\n\n  if (user) {\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({\n      success: true,\n      userId: user.id\n    });\n  } else {\n    response.json({\n      success: false,\n      data: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C c \\u043B\\u043E\\u0433\\u0438\\u043D\\u043E\\u043C \".concat(login, \" \\u0438 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0430\\u0440\\u043E\\u043B\\u0435\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\")\n    });\n  }\n});\nrouter.post('/logout', function (request, response) {\n  if (request.session.authorized) {\n    delete request.session.authorized;\n    delete request.session.login;\n    response.json({\n      success: true\n    });\n  } else {\n    response.json({\n      success: false,\n      data: 'Пользователь не авторизован'\n    });\n  }\n});\nrouter.get('/current', function (request, response) {\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (user) {\n    response.json({\n      success: true,\n      data: user\n    });\n  } else {\n    response.json({\n      success: false,\n      data: 'Пользователь не авторизован'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "multer",
        "low",
        "FileSync",
        "upload",
        "adapter",
        "db",
        "post",
        "none",
        "request",
        "response",
        "body",
        "login",
        "password",
        "error",
        "json",
        "success",
        "data",
        "userDb",
        "get",
        "user",
        "find",
        "value",
        "allUsers",
        "maxId",
        "forEach",
        "element",
        "id",
        "registerUser",
        "created_at",
        "Date",
        "toISOString",
        "balance",
        "RUB",
        "USD",
        "EUR",
        "NTC",
        "push",
        "write",
        "session",
        "authorized",
        "userId",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "sourcesContent": [
        "const router = require('express').Router();\nconst multer = require('multer');\nconst low = require('lowdb');\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst upload = multer();\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\n\nrouter.post('/register', upload.none(), (request, response) => {\n  const { login, password } = request.body;\n  let error = '';\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({ success: false, data: error });\n    return;\n  }\n\n  const userDb = db.get('users');\n  const user = userDb.find({ login }).value();\n  if (!user) {\n    const allUsers = userDb.value();\n    let maxId = 0;\n    allUsers.forEach((element) => {\n      if (+element.id > maxId) {\n        maxId = element.id;\n      }\n    });\n    maxId += 1;\n    const registerUser = {\n      created_at: new Date().toISOString(),\n      login,\n      password,\n      id: maxId,\n      balance: {\n        RUB: 0,\n        USD: 0,\n        EUR: 0,\n        NTC: 0,\n      },\n    };\n    db.get('users').push(registerUser).write();\n\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({ success: true, userId: user.id });\n  } else {\n    response.json({ success: false, data: `Логин ${login} уже существует.` });\n  }\n});\n\nrouter.post('/login', upload.none(), (request, response) => {\n  const { login, password } = request.body;\n  let error = '';\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({ success: false, data: error });\n    return;\n  }\n\n  const user = db.get('users').find({ login, password }).value();\n  if (user) {\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({ success: true, userId: user.id });\n  } else {\n    response.json({ success: false, data: `Пользователь c логином ${login} и указанным паролем не найден` });\n  }\n});\n\nrouter.post('/logout', (request, response) => {\n  if (request.session.authorized) {\n    delete request.session.authorized;\n    delete request.session.login;\n    response.json({ success: true });\n  } else {\n    response.json({ success: false, data: 'Пользователь не авторизован' });\n  }\n});\n\nrouter.get('/current', (request, response) => {\n  const user = db.get('users').find({ login: request.session.login }).value();\n  if (user) {\n    response.json({ success: true, data: user });\n  } else {\n    response.json({ success: false, data: 'Пользователь не авторизован' });\n  }\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045573276
  },
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\\\\favorites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\favorites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\favorites.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\favorites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
        "sourceFileName": "favorites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\nrouter.get('/', function (request, response) {\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id];\n  response.json({\n    success: true,\n    data: favorites || {}\n  });\n});\nrouter.post('/add', function (request, response) {\n  var _request$body = request.body,\n      id = _request$body.id,\n      name = _request$body.name;\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (id === '' || name === '') {\n    response.json({\n      success: false,\n      data: 'Поля для ввода должны быть заполенны'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id] || {};\n\n  if (favorites[id]) {\n    response.json({\n      success: false,\n      data: 'Такой пользователь уже есть в списке'\n    });\n    return;\n  }\n\n  if (id === user.id) {\n    response.json({\n      success: false,\n      data: 'Нельзя добавить себя в избранное'\n    });\n    return;\n  }\n\n  favorites[id] = name;\n  db.set(\"favorites.\".concat(user.id), favorites).write();\n  response.json({\n    success: true,\n    data: db.get('favorites').value()[user.id]\n  });\n});\nrouter.post('/remove', function (request, response) {\n  var id = request.body.id;\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id];\n\n  if (!favorites[id]) {\n    response.json({\n      success: false,\n      data: 'Удаляемый пользователь не найден'\n    });\n    return;\n  }\n\n  delete favorites[id];\n  db.set(\"favorites.\".concat(user.id), favorites).write();\n  response.json({\n    success: true,\n    data: db.get('favorites').value()[user.id] || {}\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhdm9yaXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwibG93IiwicmVxdWlyZSIsIkZpbGVTeW5jIiwiYWRhcHRlciIsImRiIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwidXNlciIsImZpbmQiLCJsb2dpbiIsInNlc3Npb24iLCJ2YWx1ZSIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsImZhdm9yaXRlcyIsImlkIiwicG9zdCIsImJvZHkiLCJuYW1lIiwic2V0Iiwid3JpdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMseUJBQUQsQ0FBeEI7O0FBRUEsSUFBTUUsT0FBTyxHQUFHLElBQUlELFFBQUosQ0FBYSxTQUFiLENBQWhCO0FBQ0EsSUFBTUUsRUFBRSxHQUFHSixHQUFHLENBQUNHLE9BQUQsQ0FBZDtBQUVBTixNQUFNLENBQUNRLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUNyQyxNQUFNQyxJQUFJLEdBQUdKLEVBQUUsQ0FBQ0MsR0FBSCxDQUFPLE9BQVAsRUFBZ0JJLElBQWhCLENBQXFCO0FBQUVDLElBQUFBLEtBQUssRUFBRUosT0FBTyxDQUFDSyxPQUFSLENBQWdCRDtBQUF6QixHQUFyQixFQUF1REUsS0FBdkQsRUFBYjs7QUFFQSxNQUFJLENBQUNKLElBQUwsRUFBVztBQUNURCxJQUFBQSxRQUFRLENBQUNNLElBQVQsQ0FBYztBQUFFQyxNQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkMsTUFBQUEsSUFBSSxFQUFFO0FBQXhCLEtBQWQ7QUFDQTtBQUNEOztBQUVELE1BQU1DLFNBQVMsR0FBR1osRUFBRSxDQUFDQyxH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QU8sRUFBRSxLQUFYO0FBQWtCQyxNQUFBQSxJQUFJLEVBQUU7QUFBeEIsS0FBZDtBQUNBO0FBQ0Q7O0FBRUQsTUFBTUMsU0FBUyxHQUFHWixFQUFFLENBQUNDLEdBQUgsQ0FBTyxXQUFQLEVBQW9CTyxLQUFwQixHQUE0QkosSUFBSSxDQUFDUyxFQUFqQyxDQUFsQjs7QUFDQSxNQUFJLENBQUNELFNBQVMsQ0FBQ0MsRUFBRCxDQUFkLEVBQW9CO0FBQ2xCVixJQUFBQSxRQUFRLENBQUNNLElBQVQsQ0FBYztBQUFFQyxNQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkMsTUFBQUEsSUFBSSxFQUFFO0FBQXhCLEtBQWQ7QUFDQTtBQUNEOztBQUVELFNBQU9DLFNBQVMsQ0FBQ0MsRUFBRCxDQUFoQjtBQUVBYixFQUFBQSxFQUFFLENBQUNpQixHQUFILHFCQUFvQmIsSUFBSSxDQUFDUyxFQUF6QixHQUErQkQsU0FBL0IsRUFBMENNLEtBQTFDO0FBQ0FmLEVBQUFBLFFBQVEsQ0FBQ00sSUFBVCxDQUFjO0FBQUVDLElBQUFBLE9BQU8sRUFBRSxJQUFYO0FBQWlCQyxJQUFBQSxJQUFJLEVBQUVYLEVBQUUsQ0FBQ0MsR0FBSCxDQUFPLFdBQVAsRUFBb0JPLEtBQXBCLEdBQTRCSixJQUFJLENBQUNTLEVBQWpDLEtBQXdDO0FBQS9ELEdBQWQ7QUFDRCxDQW5CRDtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXNCc0L7RkVxc0J3QtdGC0L7Qu9C+0LPQuNGPXFxCSlNcXGJqcy1kaXBsb21cXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgbG93ID0gcmVxdWlyZSgnbG93ZGInKTtcbmNvbnN0IEZpbGVTeW5jID0gcmVxdWlyZSgnbG93ZGIvYWRhcHRlcnMvRmlsZVN5bmMnKTtcblxuY29uc3QgYWRhcHRlciA9IG5ldyBGaWxlU3luYygnZGIuanNvbicpO1xuY29uc3QgZGIgPSBsb3coYWRhcHRlcik7XG5cbnJvdXRlci5nZXQoJy8nLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgdXNlciA9IGRiLmdldCgndXNlcnMnKS5maW5kKHsgbG9naW46IHJlcXVlc3Quc2Vzc2lvbi5sb2dpbiB9KS52YWx1ZSgpO1xuXG4gIGlmICghdXNlcikge1xuICAgIHJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZGF0YTogJ9Cf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvScgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZmF2b3JpdGVzID0gZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdO1xuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZmF2b3JpdGVzIHx8IHt9IH0pO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvYWRkJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHsgaWQsIG5hbWUgfSA9IHJlcXVlc3QuYm9keTtcbiAgY29uc3QgdXNlciA9IGRiLmdldCgndXNlcnMnKS5maW5kKHsgbG9naW46IHJlcXVlc3Quc2Vzc2lvbi5sb2dpbiB9KS52YWx1ZSgpO1xuXG4gIGlmICghdXNlcikge1xuICAgIHJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZGF0YTogJ9Cf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvScgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlkID09PSAnJyB8fCBuYW1lID09PSAnJykge1xuICAgIHJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZGF0YTogJ9Cf0L7Qu9GPINC00LvRjyDQstCy0L7QtNCwINC00L7Qu9C20L3RiyDQsdGL0YLRjCDQt9Cw0L/QvtC70LXQvdC90YsnIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGZhdm9yaXRlcyA9IGRiLmdldCgnZmF2b3JpdGVzJykudmFsdWUoKVt1c2VyLmlkXSB8fCB7fTtcbiAgaWYgKGZhdm9yaXRlc1tpZF0pIHtcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQotCw0LrQvtC5INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDRg9C20LUg0LXRgdGC0Ywg0LIg0YHQv9C40YHQutC1JyB9KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoaWQgPT09IHVzZXIuaWQpIHtcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQndC10LvRjNC30Y8g0LTQvtCx0LDQstC40YLRjCDRgdC10LHRjyDQsiDQuNC30LHRgNCw0L3QvdC+0LUnIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZhdm9yaXRlc1tpZF0gPSBuYW1lO1xuICBkYi5zZXQoYGZhdm9yaXRlcy4ke3VzZXIuaWR9YCwgZmF2b3JpdGVzKS53cml0ZSgpO1xuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdIH0pO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvcmVtb3ZlJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHsgaWQgfSA9IHJlcXVlc3QuYm9keTtcbiAgY29uc3QgdXNlciA9IGRiLmdldCgndXNlcnMnKS5maW5kKHsgbG9naW46IHJlcXVlc3Quc2Vzc2lvbi5sb2dpbiB9KS52YWx1ZSgpO1xuXG4gIGlmICghdXNlcikge1xuICAgIHJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZGF0YTogJ9Cf0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvScgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZmF2b3JpdGVzID0gZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdO1xuICBpZiAoIWZhdm9yaXRlc1tpZF0pIHtcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQo9C00LDQu9GP0LXQvNGL0Lkg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC90LUg0L3QsNC50LTQtdC9JyB9KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBkZWxldGUgZmF2b3JpdGVzW2lkXTtcblxuICBkYi5zZXQoYGZhdm9yaXRlcy4ke3VzZXIuaWR9YCwgZmF2b3JpdGVzKS53cml0ZSgpO1xuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdIHx8IHt9IH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "favorites.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "low",
        "require",
        "FileSync",
        "adapter",
        "db",
        "get",
        "request",
        "response",
        "user",
        "find",
        "login",
        "session",
        "value",
        "json",
        "success",
        "data",
        "favorites",
        "id",
        "post",
        "body",
        "name",
        "set",
        "write",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nconst router = express.Router();\nconst low = require('lowdb');\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\n\nrouter.get('/', (request, response) => {\n  const user = db.get('users').find({ login: request.session.login }).value();\n\n  if (!user) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  const favorites = db.get('favorites').value()[user.id];\n  response.json({ success: true, data: favorites || {} });\n});\n\nrouter.post('/add', (request, response) => {\n  const { id, name } = request.body;\n  const user = db.get('users').find({ login: request.session.login }).value();\n\n  if (!user) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  if (id === '' || name === '') {\n    response.json({ success: false, data: 'Поля для ввода должны быть заполенны' });\n    return;\n  }\n\n  const favorites = db.get('favorites').value()[user.id] || {};\n  if (favorites[id]) {\n    response.json({ success: false, data: 'Такой пользователь уже есть в списке' });\n    return;\n  }\n\n  if (id === user.id) {\n    response.json({ success: false, data: 'Нельзя добавить себя в избранное' });\n    return;\n  }\n\n  favorites[id] = name;\n  db.set(`favorites.${user.id}`, favorites).write();\n  response.json({ success: true, data: db.get('favorites').value()[user.id] });\n});\n\nrouter.post('/remove', (request, response) => {\n  const { id } = request.body;\n  const user = db.get('users').find({ login: request.session.login }).value();\n\n  if (!user) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  const favorites = db.get('favorites').value()[user.id];\n  if (!favorites[id]) {\n    response.json({ success: false, data: 'Удаляемый пользователь не найден' });\n    return;\n  }\n\n  delete favorites[id];\n\n  db.set(`favorites.${user.id}`, favorites).write();\n  response.json({ success: true, data: db.get('favorites').value()[user.id] || {} });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045470120
  },
  "{\"sourceRoot\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"filename\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\\\\routes\\\\money.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Моё\\\\Нетология\\\\BJS\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\money.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Моё\\Нетология\\BJS\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\money.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes\\money.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
        "sourceFileName": "money.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _lowdb = _interopRequireDefault(require(\"lowdb\"));\n\nvar _stocks = _interopRequireDefault(require(\"./stocks\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar router = _express[\"default\"].Router();\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = (0, _lowdb[\"default\"])(adapter);\nrouter.post('/add', function (request, response) {\n  var amount = request.body.amount;\n  var currency = request.body.currency;\n  amount = Number.parseFloat(amount);\n\n  if (Number.isNaN(amount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно добавить отрицательное число'\n    });\n    return;\n  }\n\n  if (!['RUB', 'EUR', 'USD', 'NTC'].includes(currency)) {\n    response.json({\n      success: false,\n      data: 'Такая валюта не существует'\n    });\n    return;\n  }\n\n  var userDb = db.get('users').find({\n    login: request.session.login\n  });\n  var user = userDb.value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var countMoney = (user.balance[currency] || 0) + amount;\n  user.balance[currency] = countMoney;\n  userDb.assign(_objectSpread({}, user)).write();\n  response.json({\n    success: true,\n    data: userDb.value()\n  });\n});\nrouter.post('/transfer', function (request, response) {\n  var amount = request.body.amount;\n  var _request$body = request.body,\n      to = _request$body.to,\n      currency = _request$body.currency;\n  var sourceUserDb = db.get('users').find({\n    login: request.session.login\n  });\n  var targetUserDb = db.get('users').find({\n    id: to\n  });\n  var sourceUser = sourceUserDb.value();\n  var targetUser = targetUserDb.value();\n  amount = Number.parseFloat(amount);\n\n  if (Number.isNaN(amount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно перевести отрицательное число'\n    });\n    return;\n  }\n\n  if (!sourceUser) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (!targetUser) {\n    response.json({\n      success: false,\n      data: 'Получатель не найден'\n    });\n    return;\n  }\n\n  if (sourceUser.balance[currency] < amount) {\n    response.json({\n      success: false,\n      data: 'Не хватает денег для перевода'\n    });\n    return;\n  }\n\n  sourceUser.balance[currency] = (sourceUser.balance[currency] || 0) - amount;\n  targetUser.balance[currency] = (targetUser.balance[currency] || 0) + amount;\n  sourceUserDb.assign(_objectSpread({}, sourceUser)).write();\n  targetUserDb.assign(_objectSpread({}, targetUser)).write();\n  response.json({\n    success: true,\n    data: sourceUserDb.value()\n  });\n});\nrouter.post('/convert', function (request, response) {\n  var _request$body2 = request.body,\n      fromCurrency = _request$body2.fromCurrency,\n      targetCurrency = _request$body2.targetCurrency;\n  var fromAmount = request.body.fromAmount;\n  fromAmount = Number.parseFloat(fromAmount);\n\n  if (Number.isNaN(fromAmount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (fromAmount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно конвертировать отрицательное число'\n    });\n    return;\n  }\n\n  var userDb = db.get('users').find({\n    login: request.session.login\n  });\n  var user = userDb.value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (user.balance[fromCurrency] < fromAmount) {\n    response.json({\n      success: false,\n      data: \"\\u041D\\u0435 \\u0445\\u0432\\u0430\\u0442\\u0430\\u0435\\u0442 \\u0434\\u0435\\u043D\\u0435\\u0433 \\u0434\\u043B\\u044F \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0430\\u0446\\u0438\\u0438 \\u0438\\u0437 \".concat(fromCurrency, \" \\u0432 \").concat(targetCurrency)\n    });\n    return;\n  }\n\n  if (fromCurrency === targetCurrency) {\n    response.json({\n      success: false,\n      data: 'Нельзя перевести в такую же валюту'\n    });\n    return;\n  }\n\n  (0, _stocks[\"default\"])(function (data) {\n    if (!data.success) {\n      response.json(data);\n      return;\n    }\n\n    var currency = data.data[\"\".concat(fromCurrency, \"_\").concat(targetCurrency)];\n    var countConvertedMoney = fromAmount / currency;\n    user.balance[fromCurrency] -= fromAmount;\n    user.balance[targetCurrency] += countConvertedMoney;\n    userDb.assign(_objectSpread({}, user)).write();\n    response.json({\n      success: true,\n      data: userDb.value()\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "money.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "FileSync",
        "require",
        "adapter",
        "db",
        "post",
        "request",
        "response",
        "amount",
        "body",
        "currency",
        "Number",
        "parseFloat",
        "isNaN",
        "json",
        "success",
        "data",
        "includes",
        "userDb",
        "get",
        "find",
        "login",
        "session",
        "user",
        "value",
        "countMoney",
        "balance",
        "assign",
        "write",
        "to",
        "sourceUserDb",
        "targetUserDb",
        "id",
        "sourceUser",
        "targetUser",
        "fromCurrency",
        "targetCurrency",
        "fromAmount",
        "countConvertedMoney",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Моё\\Нетология\\BJS\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nimport low from 'lowdb';\nimport getStocks from './stocks';\n\nconst router = express.Router();\nconst FileSync = require('lowdb/adapters/FileSync');\n\nconst adapter = new FileSync('db.json');\nconst db = low(adapter);\n\nrouter.post('/add', (request, response) => {\n  let { amount } = request.body;\n  const { currency } = request.body;\n\n  amount = Number.parseFloat(amount);\n  if (Number.isNaN(amount)) {\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({ success: false, data: 'Невозможно добавить отрицательное число' });\n    return;\n  }\n\n  if (!['RUB', 'EUR', 'USD', 'NTC'].includes(currency)) {\n    response.json({ success: false, data: 'Такая валюта не существует' });\n    return;\n  }\n\n  const userDb = db.get('users').find({ login: request.session.login });\n  const user = userDb.value();\n\n  if (!user) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  const countMoney = (user.balance[currency] || 0) + amount;\n  user.balance[currency] = countMoney;\n\n  userDb.assign({ ...user }).write();\n  response.json({ success: true, data: userDb.value() });\n});\n\nrouter.post('/transfer', (request, response) => {\n  let { amount } = request.body;\n  const { to, currency } = request.body;\n  const sourceUserDb = db.get('users').find({ login: request.session.login });\n  const targetUserDb = db.get('users').find({ id: to });\n  const sourceUser = sourceUserDb.value();\n  const targetUser = targetUserDb.value();\n\n  amount = Number.parseFloat(amount);\n  if (Number.isNaN(amount)) {\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({ success: false, data: 'Невозможно перевести отрицательное число' });\n    return;\n  }\n\n  if (!sourceUser) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  if (!targetUser) {\n    response.json({ success: false, data: 'Получатель не найден' });\n    return;\n  }\n\n  if (sourceUser.balance[currency] < amount) {\n    response.json({ success: false, data: 'Не хватает денег для перевода' });\n    return;\n  }\n\n  sourceUser.balance[currency] = (sourceUser.balance[currency] || 0) - amount;\n  targetUser.balance[currency] = (targetUser.balance[currency] || 0) + amount;\n\n  sourceUserDb.assign({ ...sourceUser }).write();\n  targetUserDb.assign({ ...targetUser }).write();\n\n  response.json({ success: true, data: sourceUserDb.value() });\n});\n\nrouter.post('/convert', (request, response) => {\n  const { fromCurrency, targetCurrency } = request.body;\n  let { fromAmount } = request.body;\n\n  fromAmount = Number.parseFloat(fromAmount);\n  if (Number.isNaN(fromAmount)) {\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\n    return;\n  }\n\n  if (fromAmount < 0) {\n    response.json({ success: false, data: 'Невозможно конвертировать отрицательное число' });\n    return;\n  }\n\n  const userDb = db.get('users').find({ login: request.session.login });\n  const user = userDb.value();\n\n  if (!user) {\n    response.json({ success: false, data: 'Пользователь не найден' });\n    return;\n  }\n\n  if (user.balance[fromCurrency] < fromAmount) {\n    response.json({\n      success: false,\n      data: `Не хватает денег для конвертации из ${fromCurrency} в ${targetCurrency}`,\n    });\n    return;\n  }\n\n  if (fromCurrency === targetCurrency) {\n    response.json({ success: false, data: 'Нельзя перевести в такую же валюту' });\n    return;\n  }\n\n  getStocks((data) => {\n    if (!data.success) {\n      response.json(data);\n      return;\n    }\n\n    const currency = data.data[`${fromCurrency}_${targetCurrency}`];\n    const countConvertedMoney = fromAmount / currency;\n    user.balance[fromCurrency] -= fromAmount;\n    user.balance[targetCurrency] += countConvertedMoney;\n\n    userDb.assign({ ...user }).write();\n    response.json({ success: true, data: userDb.value() });\n  });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1583045462903
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar _process$env = process.env,\n    PORT = _process$env.PORT,\n    PUBLIC_PATH = _process$env.PUBLIC_PATH,\n    INDEX_FILE = _process$env.INDEX_FILE,\n    HOME_FILE = _process$env.HOME_FILE;\n\nvar path = require('path');\n\nvar express = require('express');\n\nvar morgan = require('morgan');\n\nvar bodyParser = require('body-parser');\n\nvar cookieParser = require('cookie-parser');\n\nvar cookieSession = require('cookie-session');\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar db = low(new FileSync('db.json'));\n\nfunction setDefaultUser(database) {\n  database.defaults({\n    users: [{\n      created_at: '2019-10-15T05:28:25.593Z',\n      login: 'oleg@demo.ru',\n      password: 'demo',\n      id: 1,\n      balance: {\n        RUB: 1000,\n        USD: 20,\n        EUR: 20,\n        NTC: 3000\n      }\n    }, {\n      created_at: '2019-11-16T05:28:25.593Z',\n      login: 'ivan@demo.ru',\n      password: 'demo',\n      id: 2,\n      netocoins: 100,\n      balance: {\n        RUB: 20,\n        USD: 0,\n        EUR: 0,\n        NTC: 100\n      }\n    }, {\n      created_at: '2019-5-14T05:28:25.593Z',\n      login: 'petr@demo.ru',\n      password: 'demo',\n      id: 3,\n      balance: {\n        RUB: 20000,\n        USD: 300,\n        EUR: 500,\n        NTC: 50000\n      }\n    }, {\n      created_at: '2020-1-15T05:28:25.593Z',\n      login: 'galina@demo.ru',\n      password: 'demo',\n      id: 4,\n      balance: {\n        RUB: 30000,\n        USD: 150,\n        EUR: 300,\n        NTC: 20000\n      }\n    }, {\n      created_at: '2020-2-16T05:28:25.593Z',\n      login: 'vladimir@demo.ru',\n      password: 'demo',\n      id: 5,\n      balance: {\n        RUB: 60000,\n        USD: 500,\n        EUR: 600,\n        NTC: 90000\n      }\n    }],\n    favorites: {\n      1: {\n        2: 'Ваня дурачок',\n        3: 'Пират Петр'\n      },\n      2: {\n        1: 'Чувак, который должен 20к неткойнов',\n        3: 'Партнёр по бизнесу'\n      },\n      3: {\n        2: 'Важный клиент'\n      },\n      5: {\n        1: 'Важный пацан',\n        3: 'Дедуля',\n        4: 'Галя'\n      }\n    }\n  }).write();\n}\n\nif (!db.get('users').value()) setDefaultUser(db);\nvar app = express();\napp.use(cookieParser());\napp.use(cookieSession({\n  name: 'session',\n  keys: ['authorized', 'login']\n}));\napp.use(morgan('tiny'));\napp.use(express[\"static\"](\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH)));\n\nvar api = require('./routes');\n\napp.use(bodyParser.json());\napp.use('/', api);\napp.use(morgan('tiny'));\napp.get('*', function (request, response) {\n  if (request.session.authorized) {\n    response.sendFile(path.resolve(\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH), HOME_FILE));\n  } else {\n    response.sendFile(path.resolve(\"\".concat(__dirname, \"/\").concat(PUBLIC_PATH), INDEX_FILE));\n  }\n}); // eslint-disable-next-line no-console\n\napp.listen(PORT, function () {\n  return console.log(\"Server started at \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "config",
        "process",
        "env",
        "PORT",
        "PUBLIC_PATH",
        "INDEX_FILE",
        "HOME_FILE",
        "path",
        "express",
        "morgan",
        "bodyParser",
        "cookieParser",
        "cookieSession",
        "low",
        "FileSync",
        "db",
        "setDefaultUser",
        "database",
        "defaults",
        "users",
        "created_at",
        "login",
        "password",
        "id",
        "balance",
        "RUB",
        "USD",
        "EUR",
        "NTC",
        "netocoins",
        "favorites",
        "write",
        "get",
        "value",
        "app",
        "use",
        "name",
        "keys",
        "__dirname",
        "api",
        "json",
        "request",
        "response",
        "session",
        "authorized",
        "sendFile",
        "resolve",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourcesContent": [
        "require('dotenv').config();\r\n\r\nconst {\r\n  PORT, PUBLIC_PATH, INDEX_FILE, HOME_FILE,\r\n} = process.env;\r\nconst path = require('path');\r\nconst express = require('express');\r\nconst morgan = require('morgan');\r\nconst bodyParser = require('body-parser');\r\nconst cookieParser = require('cookie-parser');\r\nconst cookieSession = require('cookie-session');\r\nconst low = require('lowdb');\r\nconst FileSync = require('lowdb/adapters/FileSync');\r\n\r\nconst db = low(new FileSync('db.json'));\r\n\r\nfunction setDefaultUser(database) {\r\n  database.defaults({\r\n    users: [\r\n      {\r\n        created_at: '2019-10-15T05:28:25.593Z',\r\n        login: 'oleg@demo.ru',\r\n        password: 'demo',\r\n        id: 1,\r\n        balance: {\r\n          RUB: 1000, USD: 20, EUR: 20, NTC: 3000,\r\n        },\r\n      }, {\r\n        created_at: '2019-11-16T05:28:25.593Z',\r\n        login: 'ivan@demo.ru',\r\n        password: 'demo',\r\n        id: 2,\r\n        netocoins: 100,\r\n        balance: {\r\n          RUB: 20, USD: 0, EUR: 0, NTC: 100,\r\n        },\r\n      }, {\r\n        created_at: '2019-5-14T05:28:25.593Z',\r\n        login: 'petr@demo.ru',\r\n        password: 'demo',\r\n        id: 3,\r\n        balance: {\r\n          RUB: 20000, USD: 300, EUR: 500, NTC: 50000,\r\n        },\r\n      }, {\r\n        created_at: '2020-1-15T05:28:25.593Z',\r\n        login: 'galina@demo.ru',\r\n        password: 'demo',\r\n        id: 4,\r\n        balance: {\r\n          RUB: 30000, USD: 150, EUR: 300, NTC: 20000,\r\n        },\r\n      }, {\r\n        created_at: '2020-2-16T05:28:25.593Z',\r\n        login: 'vladimir@demo.ru',\r\n        password: 'demo',\r\n        id: 5,\r\n        balance: {\r\n          RUB: 60000, USD: 500, EUR: 600, NTC: 90000,\r\n        },\r\n      },\r\n    ],\r\n    favorites: {\r\n      1: { 2: 'Ваня дурачок', 3: 'Пират Петр' },\r\n      2: { 1: 'Чувак, который должен 20к неткойнов', 3: 'Партнёр по бизнесу' },\r\n      3: { 2: 'Важный клиент' },\r\n      5: { 1: 'Важный пацан', 3: 'Дедуля', 4: 'Галя' },\r\n    },\r\n  }).write();\r\n}\r\n\r\nif (!db.get('users').value()) setDefaultUser(db);\r\n\r\nconst app = express();\r\napp.use(cookieParser());\r\napp.use(cookieSession({\r\n  name: 'session',\r\n  keys: ['authorized', 'login'],\r\n}));\r\napp.use(morgan('tiny'));\r\napp.use(express.static(`${__dirname}/${PUBLIC_PATH}`));\r\n\r\nconst api = require('./routes');\r\n\r\napp.use(bodyParser.json());\r\napp.use('/', api);\r\napp.use(morgan('tiny'));\r\n\r\napp.get('*', (request, response) => {\r\n  if (request.session.authorized) {\r\n    response.sendFile(path.resolve(`${__dirname}/${PUBLIC_PATH}`, HOME_FILE));\r\n  } else {\r\n    response.sendFile(path.resolve(`${__dirname}/${PUBLIC_PATH}`, INDEX_FILE));\r\n  }\r\n});\r\n\r\n// eslint-disable-next-line no-console\r\napp.listen(PORT, () => console.log(`Server started at ${PORT}`));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586001349495
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _stocks = _interopRequireDefault(require(\"./stocks\"));\n\nvar _user = _interopRequireDefault(require(\"./user\"));\n\nvar _favorites = _interopRequireDefault(require(\"./favorites\"));\n\nvar _money = _interopRequireDefault(require(\"./money\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nrouter.use('/user', _user[\"default\"]);\nrouter.use('/favorites', _favorites[\"default\"]);\nrouter.use('/money', _money[\"default\"]);\nrouter.get('/stocks', function (request, response) {\n  (0, _stocks[\"default\"])(function (data) {\n    return response.json(data);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJ1c2VyIiwiZmF2b3JpdGVzIiwibW9uZXkiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJkYXRhIiwianNvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLE9BQVgsRUFBb0JDLGdCQUFwQjtBQUNBSixNQUFNLENBQUNHLEdBQVAsQ0FBVyxZQUFYLEVBQXlCRSxxQkFBekI7QUFDQUwsTUFBTSxDQUFDRyxHQUFQLENBQVcsUUFBWCxFQUFxQkcsaUJBQXJCO0FBRUFOLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQzNDLDBCQUFVLFVBQUNDLElBQUQ7QUFBQSxXQUFVRCxRQUFRLENBQUNFLElBQVQsQ0FBY0QsSUFBZCxDQUFWO0FBQUEsR0FBVjtBQUNELENBRkQ7QUFJQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixNQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBvbG5pXFxEZXNrdG9wXFxkaXBsb21Kc1xcYmpzLWRpcGxvbVxccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBnZXRTdG9ja3MgZnJvbSAnLi9zdG9ja3MnO1xyXG5pbXBvcnQgdXNlciBmcm9tICcuL3VzZXInO1xyXG5pbXBvcnQgZmF2b3JpdGVzIGZyb20gJy4vZmF2b3JpdGVzJztcclxuaW1wb3J0IG1vbmV5IGZyb20gJy4vbW9uZXknO1xyXG5cclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxucm91dGVyLnVzZSgnL3VzZXInLCB1c2VyKTtcclxucm91dGVyLnVzZSgnL2Zhdm9yaXRlcycsIGZhdm9yaXRlcyk7XHJcbnJvdXRlci51c2UoJy9tb25leScsIG1vbmV5KTtcclxuXHJcbnJvdXRlci5nZXQoJy9zdG9ja3MnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcclxuICBnZXRTdG9ja3MoKGRhdGEpID0+IHJlc3BvbnNlLmpzb24oZGF0YSkpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "user",
        "favorites",
        "money",
        "get",
        "request",
        "response",
        "data",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AACAF,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBC,gBAApB;AACAJ,MAAM,CAACG,GAAP,CAAW,YAAX,EAAyBE,qBAAzB;AACAL,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqBG,iBAArB;AAEAN,MAAM,CAACO,GAAP,CAAW,SAAX,EAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC3C,0BAAU,UAACC,IAAD;AAAA,WAAUD,QAAQ,CAACE,IAAT,CAAcD,IAAd,CAAV;AAAA,GAAV;AACD,CAFD;AAIAE,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\r\nimport getStocks from './stocks';\r\nimport user from './user';\r\nimport favorites from './favorites';\r\nimport money from './money';\r\n\r\nconst router = express.Router();\r\nrouter.use('/user', user);\r\nrouter.use('/favorites', favorites);\r\nrouter.use('/money', money);\r\n\r\nrouter.get('/stocks', (request, response) => {\r\n  getStocks((data) => response.json(data));\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586001349642
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\\\\stocks.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\stocks.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\stocks.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\stocks.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
        "sourceFileName": "stocks.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar request = require('request');\n\nfunction getStocks(callback) {\n  var url = 'https://www.cbr-xml-daily.ru/daily_json.js';\n  request({\n    method: 'GET',\n    url: url\n  }, function (error, bankResponse, body) {\n    if (!error && bankResponse.statusCode === 200) {\n      var parsed = JSON.parse(body);\n      var usd = parsed.Valute.USD.Value;\n      var eur = parsed.Valute.EUR.Value;\n      var ntc = Number.parseFloat((parsed.Valute.XDR.Value / 10).toFixed(4));\n      callback({\n        success: true,\n        data: {\n          RUB_USD: usd,\n          RUB_EUR: eur,\n          RUB_NTC: ntc,\n          USD_RUB: +(1 / usd).toFixed(5),\n          USD_EUR: +(usd / eur).toFixed(5),\n          USD_NTC: +(usd / ntc).toFixed(5),\n          EUR_RUB: +(1 / eur).toFixed(5),\n          EUR_USD: +(eur / usd).toFixed(5),\n          EUR_NTC: +(eur / ntc).toFixed(5),\n          NTC_RUB: +(1 / ntc).toFixed(5),\n          NTC_USD: +(ntc / usd).toFixed(5),\n          NTC_EUR: +(ntc / eur).toFixed(5)\n        }\n      });\n    } else callback({\n      success: false,\n      data: error\n    });\n  });\n}\n\nmodule.exports = getStocks;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b2Nrcy5qcyJdLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsImdldFN0b2NrcyIsImNhbGxiYWNrIiwidXJsIiwibWV0aG9kIiwiZXJyb3IiLCJiYW5rUmVzcG9uc2UiLCJib2R5Iiwic3RhdHVzQ29kZSIsInBhcnNlZCIsIkpTT04iLCJwYXJzZSIsInVzZCIsIlZhbHV0ZSIsIlVTRCIsIlZhbHVlIiwiZXVyIiwiRVVSIiwibnRjIiwiTnVtYmVyIiwicGFyc2VGbG9hdCIsIlhEUiIsInRvRml4ZWQiLCJzdWNjZXNzIiwiZGF0YSIsIlJVQl9VU0QiLCJSVUJfRVVSIiwiUlVCX05UQyIsIlVTRF9SVUIiLCJVU0RfRVVSIiwiVVNEX05UQyIsIkVVUl9SVUIiLCJFVVJfVVNEIiwiRVVSX05UQyIsIk5UQ19SVUIiLCJOVENfVVNEIiwiTlRDX0VVUiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxTQUFTQyxTQUFULENBQW1CQyxRQUFuQixFQUE2QjtBQUMzQixNQUFNQyxHQUFHLEdBQUcsNENBQVo7QUFDQUosRUFBQUEsT0FBTyxDQUFDO0FBQ05LLElBQUFBLE1BQU0sRUFBRSxLQURGO0FBRU5ELElBQUFBLEdBQUcsRUFBSEE7QUFGTSxHQUFELEVBR0osVUFBQ0UsS0FBRCxFQUFRQyxZQUFSLEVBQXNCQyxJQUF0QixFQUErQjtBQUNoQyxRQUFJLENBQUNGLEtBQUQsSUFBVUMsWUFBWSxDQUFDRSxVQUFiLEtBQTRCLEdBQTFDLEVBQStDO0FBQzdDLFVBQU1DLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdKLElBQVgsQ0FBZjtBQUNBLFVBQU1LLEdBQUcsR0FBR0gsTUFBTSxDQUFDSSxNQUFQLENBQWNDLEdBQWQsQ0FBa0JDLEtBQTlCO0FBQ0EsVUFBTUMsR0FBRyxHQUFHUCxNQUFNLENBQUNJLE1BQVAsQ0FBY0ksR0FBZCxDQUFrQkYsS0FBOUI7QUFDQSxVQUFNRyxHQUFHLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBUCxDQUFrQixDQUFDWCxNQUFNLENBQUNJLE1BQVAsQ0FBY1EsR0FBZCxDQUFrQk4sS0FBbEIsR0FBMEIsRUFBM0IsRUFBK0JPLE9BQS9CLENBQXVDLENBQXZDLENBQWxCLENBQVo7QUFDQXBCLE1BQUFBLFFBQVEsQ0FBQztBQUNQcUIsUUFBQUEsT0FBTyxFQUFFLElBREY7QUFFUEMsUUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFVBQUFBLE9BQU8sRUFBRWIsR0FETDtBQUVKYyxVQUFBQSxPQUFPLEVBQUVWLEdBRkw7QUFHSlcsVUFBQUEsT0FBTyxFQUFFVCxHQUhMO0FBS0pVLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSWhCLEdBQUwsRUFBVVUsT0FBVixDQUFrQixDQUFsQixDQUxOO0FBTUpPLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUNqQixHQUFHLEdBQUdJLEdBQVAsRUFBWU0sT0FBWixDQUFvQixDQUFwQixDQU5OO0FBT0pRLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUNsQixHQUFHLEdBQUdNLEdBQVAsRUFBWUksT0FBWixDQUFvQixDQUFwQixDQVBOO0FBU0pTLFVBQUFBLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSWYsR0FBTCxFQUFVTSxPQUFWLENBQWtCLENBQWxCLENBVE47QUFVSlUsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2hCLEdBQUcsR0FBR0osR0FBUCxFQUFZVSxPQUFaLENBQW9CLENBQXBCLENBVk47QUFXSlcsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2pCLEdBQUcsR0FBR0UsR0FBUCxFQUFZSSxPQUFaLENBQW9CLENBQXBCLENBWE47QUFhSlksVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQyxJQUFJaEIsR0FBTCxFQUFVSSxPQUFWLENBQWtCLENBQWxCLENBYk47QUFjSmEsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2pCLEdBQUcsR0FBR04sR0FBUCxFQUFZVSxPQUFaLENBQW9CLENBQXBCLENBZE47QUFlSmMsVUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBQ2xCLEdBQUcsR0FBR0YsR0FBUCxFQUFZTSxPQUFaLENBQW9CLENBQXBCO0FBZk47QUFGQyxPQUFELENBQVI7QUFvQkQsS0F6QkQsTUF5Qk9wQixRQUFRLENBQUM7QUFBRXFCLE1BQUFBLE9BQU8sRUFBRSxLQUFYO0FBQWtCQyxNQUFBQSxJQUFJLEVBQUVuQjtBQUF4QixLQUFELENBQVI7QUFDUixHQTlCTSxDQUFQO0FBK0JEOztBQUVEZ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckMsU0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwb2xuaVxcRGVza3RvcFxcZGlwbG9tSnNcXGJqcy1kaXBsb21cXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0Jyk7XHJcblxyXG5mdW5jdGlvbiBnZXRTdG9ja3MoY2FsbGJhY2spIHtcclxuICBjb25zdCB1cmwgPSAnaHR0cHM6Ly93d3cuY2JyLXhtbC1kYWlseS5ydS9kYWlseV9qc29uLmpzJztcclxuICByZXF1ZXN0KHtcclxuICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICB1cmwsXHJcbiAgfSwgKGVycm9yLCBiYW5rUmVzcG9uc2UsIGJvZHkpID0+IHtcclxuICAgIGlmICghZXJyb3IgJiYgYmFua1Jlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDIwMCkge1xyXG4gICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKGJvZHkpO1xyXG4gICAgICBjb25zdCB1c2QgPSBwYXJzZWQuVmFsdXRlLlVTRC5WYWx1ZTtcclxuICAgICAgY29uc3QgZXVyID0gcGFyc2VkLlZhbHV0ZS5FVVIuVmFsdWU7XHJcbiAgICAgIGNvbnN0IG50YyA9IE51bWJlci5wYXJzZUZsb2F0KChwYXJzZWQuVmFsdXRlLlhEUi5WYWx1ZSAvIDEwKS50b0ZpeGVkKDQpKTtcclxuICAgICAgY2FsbGJhY2soe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgUlVCX1VTRDogdXNkLFxyXG4gICAgICAgICAgUlVCX0VVUjogZXVyLFxyXG4gICAgICAgICAgUlVCX05UQzogbnRjLFxyXG5cclxuICAgICAgICAgIFVTRF9SVUI6ICsoMSAvIHVzZCkudG9GaXhlZCg1KSxcclxuICAgICAgICAgIFVTRF9FVVI6ICsodXNkIC8gZXVyKS50b0ZpeGVkKDUpLFxyXG4gICAgICAgICAgVVNEX05UQzogKyh1c2QgLyBudGMpLnRvRml4ZWQoNSksXHJcblxyXG4gICAgICAgICAgRVVSX1JVQjogKygxIC8gZXVyKS50b0ZpeGVkKDUpLFxyXG4gICAgICAgICAgRVVSX1VTRDogKyhldXIgLyB1c2QpLnRvRml4ZWQoNSksXHJcbiAgICAgICAgICBFVVJfTlRDOiArKGV1ciAvIG50YykudG9GaXhlZCg1KSxcclxuXHJcbiAgICAgICAgICBOVENfUlVCOiArKDEgLyBudGMpLnRvRml4ZWQoNSksXHJcbiAgICAgICAgICBOVENfVVNEOiArKG50YyAvIHVzZCkudG9GaXhlZCg1KSxcclxuICAgICAgICAgIE5UQ19FVVI6ICsobnRjIC8gZXVyKS50b0ZpeGVkKDUpLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGNhbGxiYWNrKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6IGVycm9yIH0pO1xyXG4gIH0pO1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdldFN0b2NrcztcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "stocks.js"
      ],
      "names": [
        "request",
        "require",
        "getStocks",
        "callback",
        "url",
        "method",
        "error",
        "bankResponse",
        "body",
        "statusCode",
        "parsed",
        "JSON",
        "parse",
        "usd",
        "Valute",
        "USD",
        "Value",
        "eur",
        "EUR",
        "ntc",
        "Number",
        "parseFloat",
        "XDR",
        "toFixed",
        "success",
        "data",
        "RUB_USD",
        "RUB_EUR",
        "RUB_NTC",
        "USD_RUB",
        "USD_EUR",
        "USD_NTC",
        "EUR_RUB",
        "EUR_USD",
        "EUR_NTC",
        "NTC_RUB",
        "NTC_USD",
        "NTC_EUR",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,MAAMC,GAAG,GAAG,4CAAZ;AACAJ,EAAAA,OAAO,CAAC;AACNK,IAAAA,MAAM,EAAE,KADF;AAEND,IAAAA,GAAG,EAAHA;AAFM,GAAD,EAGJ,UAACE,KAAD,EAAQC,YAAR,EAAsBC,IAAtB,EAA+B;AAChC,QAAI,CAACF,KAAD,IAAUC,YAAY,CAACE,UAAb,KAA4B,GAA1C,EAA+C;AAC7C,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAf;AACA,UAAMK,GAAG,GAAGH,MAAM,CAACI,MAAP,CAAcC,GAAd,CAAkBC,KAA9B;AACA,UAAMC,GAAG,GAAGP,MAAM,CAACI,MAAP,CAAcI,GAAd,CAAkBF,KAA9B;AACA,UAAMG,GAAG,GAAGC,MAAM,CAACC,UAAP,CAAkB,CAACX,MAAM,CAACI,MAAP,CAAcQ,GAAd,CAAkBN,KAAlB,GAA0B,EAA3B,EAA+BO,OAA/B,CAAuC,CAAvC,CAAlB,CAAZ;AACApB,MAAAA,QAAQ,CAAC;AACPqB,QAAAA,OAAO,EAAE,IADF;AAEPC,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAEb,GADL;AAEJc,UAAAA,OAAO,EAAEV,GAFL;AAGJW,UAAAA,OAAO,EAAET,GAHL;AAKJU,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIhB,GAAL,EAAUU,OAAV,CAAkB,CAAlB,CALN;AAMJO,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGI,GAAP,EAAYM,OAAZ,CAAoB,CAApB,CANN;AAOJQ,UAAAA,OAAO,EAAE,CAAC,CAAClB,GAAG,GAAGM,GAAP,EAAYI,OAAZ,CAAoB,CAApB,CAPN;AASJS,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIf,GAAL,EAAUM,OAAV,CAAkB,CAAlB,CATN;AAUJU,UAAAA,OAAO,EAAE,CAAC,CAAChB,GAAG,GAAGJ,GAAP,EAAYU,OAAZ,CAAoB,CAApB,CAVN;AAWJW,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGE,GAAP,EAAYI,OAAZ,CAAoB,CAApB,CAXN;AAaJY,UAAAA,OAAO,EAAE,CAAC,CAAC,IAAIhB,GAAL,EAAUI,OAAV,CAAkB,CAAlB,CAbN;AAcJa,UAAAA,OAAO,EAAE,CAAC,CAACjB,GAAG,GAAGN,GAAP,EAAYU,OAAZ,CAAoB,CAApB,CAdN;AAeJc,UAAAA,OAAO,EAAE,CAAC,CAAClB,GAAG,GAAGF,GAAP,EAAYM,OAAZ,CAAoB,CAApB;AAfN;AAFC,OAAD,CAAR;AAoBD,KAzBD,MAyBOpB,QAAQ,CAAC;AAAEqB,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,IAAI,EAAEnB;AAAxB,KAAD,CAAR;AACR,GA9BM,CAAP;AA+BD;;AAEDgC,MAAM,CAACC,OAAP,GAAiBrC,SAAjB",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "sourcesContent": [
        "const request = require('request');\r\n\r\nfunction getStocks(callback) {\r\n  const url = 'https://www.cbr-xml-daily.ru/daily_json.js';\r\n  request({\r\n    method: 'GET',\r\n    url,\r\n  }, (error, bankResponse, body) => {\r\n    if (!error && bankResponse.statusCode === 200) {\r\n      const parsed = JSON.parse(body);\r\n      const usd = parsed.Valute.USD.Value;\r\n      const eur = parsed.Valute.EUR.Value;\r\n      const ntc = Number.parseFloat((parsed.Valute.XDR.Value / 10).toFixed(4));\r\n      callback({\r\n        success: true,\r\n        data: {\r\n          RUB_USD: usd,\r\n          RUB_EUR: eur,\r\n          RUB_NTC: ntc,\r\n\r\n          USD_RUB: +(1 / usd).toFixed(5),\r\n          USD_EUR: +(usd / eur).toFixed(5),\r\n          USD_NTC: +(usd / ntc).toFixed(5),\r\n\r\n          EUR_RUB: +(1 / eur).toFixed(5),\r\n          EUR_USD: +(eur / usd).toFixed(5),\r\n          EUR_NTC: +(eur / ntc).toFixed(5),\r\n\r\n          NTC_RUB: +(1 / ntc).toFixed(5),\r\n          NTC_USD: +(ntc / usd).toFixed(5),\r\n          NTC_EUR: +(ntc / eur).toFixed(5),\r\n        },\r\n      });\r\n    } else callback({ success: false, data: error });\r\n  });\r\n}\r\n\r\nmodule.exports = getStocks;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586001349644
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\user.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar router = require('express').Router();\n\nvar multer = require('multer');\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar upload = multer();\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\nrouter.post('/register', upload.none(), function (request, response) {\n  var _request$body = request.body,\n      login = _request$body.login,\n      password = _request$body.password;\n  var error = '';\n\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({\n      success: false,\n      data: error\n    });\n    return;\n  }\n\n  var userDb = db.get('users');\n  var user = userDb.find({\n    login: login\n  }).value();\n\n  if (!user) {\n    var allUsers = userDb.value();\n    var maxId = 0;\n    allUsers.forEach(function (element) {\n      if (+element.id > maxId) {\n        maxId = element.id;\n      }\n    });\n    maxId += 1;\n    var registerUser = {\n      created_at: new Date().toISOString(),\n      login: login,\n      password: password,\n      id: maxId,\n      balance: {\n        RUB: 0,\n        USD: 0,\n        EUR: 0,\n        NTC: 0\n      }\n    };\n    db.get('users').push(registerUser).write();\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({\n      success: true,\n      userId: registerUser.id\n    });\n  } else {\n    response.json({\n      success: false,\n      data: \"\\u041B\\u043E\\u0433\\u0438\\u043D \".concat(login, \" \\u0443\\u0436\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442.\")\n    });\n  }\n});\nrouter.post('/login', upload.none(), function (request, response) {\n  var _request$body2 = request.body,\n      login = _request$body2.login,\n      password = _request$body2.password;\n  var error = '';\n\n  if (login === '') {\n    error += 'Поле \"Логин\" обязательно для заполнения.';\n  }\n\n  if (password === '') {\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\n  }\n\n  if (error !== '') {\n    response.json({\n      success: false,\n      data: error\n    });\n    return;\n  }\n\n  var user = db.get('users').find({\n    login: login,\n    password: password\n  }).value();\n\n  if (user) {\n    request.session.authorized = true;\n    request.session.login = login;\n    response.json({\n      success: true,\n      userId: user.id\n    });\n  } else {\n    response.json({\n      success: false,\n      data: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C c \\u043B\\u043E\\u0433\\u0438\\u043D\\u043E\\u043C \".concat(login, \" \\u0438 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043D\\u044B\\u043C \\u043F\\u0430\\u0440\\u043E\\u043B\\u0435\\u043C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\")\n    });\n  }\n});\nrouter.post('/logout', function (request, response) {\n  if (request.session.authorized) {\n    delete request.session.authorized;\n    delete request.session.login;\n    response.json({\n      success: true\n    });\n  } else {\n    response.json({\n      success: false,\n      data: 'Пользователь не авторизован'\n    });\n  }\n});\nrouter.get('/current', function (request, response) {\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (user) {\n    response.json({\n      success: true,\n      data: user\n    });\n  } else {\n    response.json({\n      success: false,\n      data: 'Пользователь не авторизован'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "multer",
        "low",
        "FileSync",
        "upload",
        "adapter",
        "db",
        "post",
        "none",
        "request",
        "response",
        "body",
        "login",
        "password",
        "error",
        "json",
        "success",
        "data",
        "userDb",
        "get",
        "user",
        "find",
        "value",
        "allUsers",
        "maxId",
        "forEach",
        "element",
        "id",
        "registerUser",
        "created_at",
        "Date",
        "toISOString",
        "balance",
        "RUB",
        "USD",
        "EUR",
        "NTC",
        "push",
        "write",
        "session",
        "authorized",
        "userId",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "sourcesContent": [
        "const router = require('express').Router();\r\nconst multer = require('multer');\r\nconst low = require('lowdb');\r\nconst FileSync = require('lowdb/adapters/FileSync');\r\n\r\nconst upload = multer();\r\nconst adapter = new FileSync('db.json');\r\nconst db = low(adapter);\r\n\r\nrouter.post('/register', upload.none(), (request, response) => {\r\n  const { login, password } = request.body;\r\n  let error = '';\r\n  if (login === '') {\r\n    error += 'Поле \"Логин\" обязательно для заполнения.';\r\n  }\r\n\r\n  if (password === '') {\r\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\r\n  }\r\n\r\n  if (error !== '') {\r\n    response.json({ success: false, data: error });\r\n    return;\r\n  }\r\n\r\n  const userDb = db.get('users');\r\n  const user = userDb.find({ login }).value();\r\n  if (!user) {\r\n    const allUsers = userDb.value();\r\n    let maxId = 0;\r\n    allUsers.forEach((element) => {\r\n      if (+element.id > maxId) {\r\n        maxId = element.id;\r\n      }\r\n    });\r\n    maxId += 1;\r\n    const registerUser = {\r\n      created_at: new Date().toISOString(),\r\n      login,\r\n      password,\r\n      id: maxId,\r\n      balance: {\r\n        RUB: 0,\r\n        USD: 0,\r\n        EUR: 0,\r\n        NTC: 0,\r\n      },\r\n    };\r\n    db.get('users').push(registerUser).write();\r\n\r\n    request.session.authorized = true;\r\n    request.session.login = login;\r\n    response.json({ success: true, userId: registerUser.id });\r\n  } else {\r\n    response.json({ success: false, data: `Логин ${login} уже существует.` });\r\n  }\r\n});\r\n\r\nrouter.post('/login', upload.none(), (request, response) => {\r\n  const { login, password } = request.body;\r\n  let error = '';\r\n  if (login === '') {\r\n    error += 'Поле \"Логин\" обязательно для заполнения.';\r\n  }\r\n\r\n  if (password === '') {\r\n    error += ' Поле \"Пароль\" обязательно для заполнения.';\r\n  }\r\n\r\n  if (error !== '') {\r\n    response.json({ success: false, data: error });\r\n    return;\r\n  }\r\n\r\n  const user = db.get('users').find({ login, password }).value();\r\n  if (user) {\r\n    request.session.authorized = true;\r\n    request.session.login = login;\r\n    response.json({ success: true, userId: user.id });\r\n  } else {\r\n    response.json({ success: false, data: `Пользователь c логином ${login} и указанным паролем не найден` });\r\n  }\r\n});\r\n\r\nrouter.post('/logout', (request, response) => {\r\n  if (request.session.authorized) {\r\n    delete request.session.authorized;\r\n    delete request.session.login;\r\n    response.json({ success: true });\r\n  } else {\r\n    response.json({ success: false, data: 'Пользователь не авторизован' });\r\n  }\r\n});\r\n\r\nrouter.get('/current', (request, response) => {\r\n  const user = db.get('users').find({ login: request.session.login }).value();\r\n  if (user) {\r\n    response.json({ success: true, data: user });\r\n  } else {\r\n    response.json({ success: false, data: 'Пользователь не авторизован' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587022293240
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\\\\favorites.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\favorites.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\favorites.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\favorites.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
        "sourceFileName": "favorites.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nvar low = require('lowdb');\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\nrouter.get('/', function (request, response) {\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id];\n  response.json({\n    success: true,\n    data: favorites || {}\n  });\n});\nrouter.post('/add', function (request, response) {\n  var _request$body = request.body,\n      id = _request$body.id,\n      name = _request$body.name;\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (id === '' || name === '') {\n    response.json({\n      success: false,\n      data: 'Поля для ввода должны быть заполенны'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id] || {};\n\n  if (favorites[id]) {\n    response.json({\n      success: false,\n      data: 'Такой пользователь уже есть в списке'\n    });\n    return;\n  }\n\n  if (id === user.id) {\n    response.json({\n      success: false,\n      data: 'Нельзя добавить себя в избранное'\n    });\n    return;\n  }\n\n  favorites[id] = name;\n  db.set(\"favorites.\".concat(user.id), favorites).write();\n  response.json({\n    success: true,\n    data: db.get('favorites').value()[user.id]\n  });\n});\nrouter.post('/remove', function (request, response) {\n  var id = request.body.id;\n  var user = db.get('users').find({\n    login: request.session.login\n  }).value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var favorites = db.get('favorites').value()[user.id];\n\n  if (!favorites[id]) {\n    response.json({\n      success: false,\n      data: 'Удаляемый пользователь не найден'\n    });\n    return;\n  }\n\n  delete favorites[id];\n  db.set(\"favorites.\".concat(user.id), favorites).write();\n  response.json({\n    success: true,\n    data: db.get('favorites').value()[user.id] || {}\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhdm9yaXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwibG93IiwicmVxdWlyZSIsIkZpbGVTeW5jIiwiYWRhcHRlciIsImRiIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwidXNlciIsImZpbmQiLCJsb2dpbiIsInNlc3Npb24iLCJ2YWx1ZSIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsImZhdm9yaXRlcyIsImlkIiwicG9zdCIsImJvZHkiLCJuYW1lIiwic2V0Iiwid3JpdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMseUJBQUQsQ0FBeEI7O0FBRUEsSUFBTUUsT0FBTyxHQUFHLElBQUlELFFBQUosQ0FBYSxTQUFiLENBQWhCO0FBQ0EsSUFBTUUsRUFBRSxHQUFHSixHQUFHLENBQUNHLE9BQUQsQ0FBZDtBQUVBTixNQUFNLENBQUNRLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUNyQyxNQUFNQyxJQUFJLEdBQUdKLEVBQUUsQ0FBQ0MsR0FBSCxDQUFPLE9BQVAsRUFBZ0JJLElBQWhCLENBQXFCO0FBQUVDLElBQUFBLEtBQUssRUFBRUosT0FBTyxDQUFDSyxPQUFSLENBQWdCRDtBQUF6QixHQUFyQixFQUF1REUsS0FBdkQsRUFBYjs7QUFFQSxNQUFJLENBQUNKLElBQUwsRUFBVztBQUNURCxJQUFBQSxRQUFRLENBQUNNLElBQVQsQ0FBYztBQUFFQyxNQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkMsTUFBQUEsSUFBSSxFQUFFO0FBQXhCLEtBQWQ7QUFDQTtBQUNEOztBQUVELE1BQU1DLFNBQVMsR0FBR1osRUFBRSxDQUFDQyxH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QU8sRUFBRSxLQUFYO0FBQWtCQyxNQUFBQSxJQUFJLEVBQUU7QUFBeEIsS0FBZDtBQUNBO0FBQ0Q7O0FBRUQsTUFBTUMsU0FBUyxHQUFHWixFQUFFLENBQUNDLEdBQUgsQ0FBTyxXQUFQLEVBQW9CTyxLQUFwQixHQUE0QkosSUFBSSxDQUFDUyxFQUFqQyxDQUFsQjs7QUFDQSxNQUFJLENBQUNELFNBQVMsQ0FBQ0MsRUFBRCxDQUFkLEVBQW9CO0FBQ2xCVixJQUFBQSxRQUFRLENBQUNNLElBQVQsQ0FBYztBQUFFQyxNQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQkMsTUFBQUEsSUFBSSxFQUFFO0FBQXhCLEtBQWQ7QUFDQTtBQUNEOztBQUVELFNBQU9DLFNBQVMsQ0FBQ0MsRUFBRCxDQUFoQjtBQUVBYixFQUFBQSxFQUFFLENBQUNpQixHQUFILHFCQUFvQmIsSUFBSSxDQUFDUyxFQUF6QixHQUErQkQsU0FBL0IsRUFBMENNLEtBQTFDO0FBQ0FmLEVBQUFBLFFBQVEsQ0FBQ00sSUFBVCxDQUFjO0FBQUVDLElBQUFBLE9BQU8sRUFBRSxJQUFYO0FBQWlCQyxJQUFBQSxJQUFJLEVBQUVYLEVBQUUsQ0FBQ0MsR0FBSCxDQUFPLFdBQVAsRUFBb0JPLEtBQXBCLEdBQTRCSixJQUFJLENBQUNTLEVBQWpDLEtBQXdDO0FBQS9ELEdBQWQ7QUFDRCxDQW5CRDtBQXFCQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwb2xuaVxcRGVza3RvcFxcZGlwbG9tSnNcXGJqcy1kaXBsb21cXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgbG93ID0gcmVxdWlyZSgnbG93ZGInKTtcclxuY29uc3QgRmlsZVN5bmMgPSByZXF1aXJlKCdsb3dkYi9hZGFwdGVycy9GaWxlU3luYycpO1xyXG5cclxuY29uc3QgYWRhcHRlciA9IG5ldyBGaWxlU3luYygnZGIuanNvbicpO1xyXG5jb25zdCBkYiA9IGxvdyhhZGFwdGVyKTtcclxuXHJcbnJvdXRlci5nZXQoJy8nLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcclxuICBjb25zdCB1c2VyID0gZGIuZ2V0KCd1c2VycycpLmZpbmQoeyBsb2dpbjogcmVxdWVzdC5zZXNzaW9uLmxvZ2luIH0pLnZhbHVlKCk7XHJcblxyXG4gIGlmICghdXNlcikge1xyXG4gICAgcmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBkYXRhOiAn0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC90LUg0L3QsNC50LTQtdC9JyB9KTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGNvbnN0IGZhdm9yaXRlcyA9IGRiLmdldCgnZmF2b3JpdGVzJykudmFsdWUoKVt1c2VyLmlkXTtcclxuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZmF2b3JpdGVzIHx8IHt9IH0pO1xyXG59KTtcclxuXHJcbnJvdXRlci5wb3N0KCcvYWRkJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XHJcbiAgY29uc3QgeyBpZCwgbmFtZSB9ID0gcmVxdWVzdC5ib2R5O1xyXG4gIGNvbnN0IHVzZXIgPSBkYi5nZXQoJ3VzZXJzJykuZmluZCh7IGxvZ2luOiByZXF1ZXN0LnNlc3Npb24ubG9naW4gfSkudmFsdWUoKTtcclxuXHJcbiAgaWYgKCF1c2VyKSB7XHJcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQn9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QtSDQvdCw0LnQtNC10L0nIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYgKGlkID09PSAnJyB8fCBuYW1lID09PSAnJykge1xyXG4gICAgcmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBkYXRhOiAn0J/QvtC70Y8g0LTQu9GPINCy0LLQvtC00LAg0LTQvtC70LbQvdGLINCx0YvRgtGMINC30LDQv9C+0LvQtdC90L3RiycgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBjb25zdCBmYXZvcml0ZXMgPSBkYi5nZXQoJ2Zhdm9yaXRlcycpLnZhbHVlKClbdXNlci5pZF0gfHwge307XHJcbiAgaWYgKGZhdm9yaXRlc1tpZF0pIHtcclxuICAgIHJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZGF0YTogJ9Ci0LDQutC+0Lkg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINGD0LbQtSDQtdGB0YLRjCDQsiDRgdC/0LjRgdC60LUnIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYgKGlkID09PSB1c2VyLmlkKSB7XHJcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQndC10LvRjNC30Y8g0LTQvtCx0LDQstC40YLRjCDRgdC10LHRjyDQsiDQuNC30LHRgNCw0L3QvdC+0LUnIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgZmF2b3JpdGVzW2lkXSA9IG5hbWU7XHJcbiAgZGIuc2V0KGBmYXZvcml0ZXMuJHt1c2VyLmlkfWAsIGZhdm9yaXRlcykud3JpdGUoKTtcclxuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdIH0pO1xyXG59KTtcclxuXHJcbnJvdXRlci5wb3N0KCcvcmVtb3ZlJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XHJcbiAgY29uc3QgeyBpZCB9ID0gcmVxdWVzdC5ib2R5O1xyXG4gIGNvbnN0IHVzZXIgPSBkYi5nZXQoJ3VzZXJzJykuZmluZCh7IGxvZ2luOiByZXF1ZXN0LnNlc3Npb24ubG9naW4gfSkudmFsdWUoKTtcclxuXHJcbiAgaWYgKCF1c2VyKSB7XHJcbiAgICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGRhdGE6ICfQn9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0L3QtSDQvdCw0LnQtNC10L0nIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZmF2b3JpdGVzID0gZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdO1xyXG4gIGlmICghZmF2b3JpdGVzW2lkXSkge1xyXG4gICAgcmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBkYXRhOiAn0KPQtNCw0LvRj9C10LzRi9C5INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQvdC1INC90LDQudC00LXQvScgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBkZWxldGUgZmF2b3JpdGVzW2lkXTtcclxuXHJcbiAgZGIuc2V0KGBmYXZvcml0ZXMuJHt1c2VyLmlkfWAsIGZhdm9yaXRlcykud3JpdGUoKTtcclxuICByZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogZGIuZ2V0KCdmYXZvcml0ZXMnKS52YWx1ZSgpW3VzZXIuaWRdIHx8IHt9IH0pO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "favorites.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "low",
        "require",
        "FileSync",
        "adapter",
        "db",
        "get",
        "request",
        "response",
        "user",
        "find",
        "login",
        "session",
        "value",
        "json",
        "success",
        "data",
        "favorites",
        "id",
        "post",
        "body",
        "name",
        "set",
        "write",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\r\n\r\nconst router = express.Router();\r\nconst low = require('lowdb');\r\nconst FileSync = require('lowdb/adapters/FileSync');\r\n\r\nconst adapter = new FileSync('db.json');\r\nconst db = low(adapter);\r\n\r\nrouter.get('/', (request, response) => {\r\n  const user = db.get('users').find({ login: request.session.login }).value();\r\n\r\n  if (!user) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  const favorites = db.get('favorites').value()[user.id];\r\n  response.json({ success: true, data: favorites || {} });\r\n});\r\n\r\nrouter.post('/add', (request, response) => {\r\n  const { id, name } = request.body;\r\n  const user = db.get('users').find({ login: request.session.login }).value();\r\n\r\n  if (!user) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  if (id === '' || name === '') {\r\n    response.json({ success: false, data: 'Поля для ввода должны быть заполенны' });\r\n    return;\r\n  }\r\n\r\n  const favorites = db.get('favorites').value()[user.id] || {};\r\n  if (favorites[id]) {\r\n    response.json({ success: false, data: 'Такой пользователь уже есть в списке' });\r\n    return;\r\n  }\r\n\r\n  if (id === user.id) {\r\n    response.json({ success: false, data: 'Нельзя добавить себя в избранное' });\r\n    return;\r\n  }\r\n\r\n  favorites[id] = name;\r\n  db.set(`favorites.${user.id}`, favorites).write();\r\n  response.json({ success: true, data: db.get('favorites').value()[user.id] });\r\n});\r\n\r\nrouter.post('/remove', (request, response) => {\r\n  const { id } = request.body;\r\n  const user = db.get('users').find({ login: request.session.login }).value();\r\n\r\n  if (!user) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  const favorites = db.get('favorites').value()[user.id];\r\n  if (!favorites[id]) {\r\n    response.json({ success: false, data: 'Удаляемый пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  delete favorites[id];\r\n\r\n  db.set(`favorites.${user.id}`, favorites).write();\r\n  response.json({ success: true, data: db.get('favorites').value()[user.id] || {} });\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586001349642
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"filename\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\\\\routes\\\\money.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\polni\\\\Desktop\\\\diplomJs\\\\bjs-diplom\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\money.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\money.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes\\money.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
        "sourceFileName": "money.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _lowdb = _interopRequireDefault(require(\"lowdb\"));\n\nvar _stocks = _interopRequireDefault(require(\"./stocks\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar router = _express[\"default\"].Router();\n\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = (0, _lowdb[\"default\"])(adapter);\nrouter.post('/add', function (request, response) {\n  var amount = request.body.amount;\n  var currency = request.body.currency;\n  amount = Number.parseFloat(amount);\n\n  if (Number.isNaN(amount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно добавить отрицательное число'\n    });\n    return;\n  }\n\n  if (!['RUB', 'EUR', 'USD', 'NTC'].includes(currency)) {\n    response.json({\n      success: false,\n      data: 'Такая валюта не существует'\n    });\n    return;\n  }\n\n  var userDb = db.get('users').find({\n    login: request.session.login\n  });\n  var user = userDb.value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  var countMoney = (user.balance[currency] || 0) + amount;\n  user.balance[currency] = countMoney;\n  userDb.assign(_objectSpread({}, user)).write();\n  response.json({\n    success: true,\n    data: userDb.value()\n  });\n});\nrouter.post('/transfer', function (request, response) {\n  var amount = request.body.amount;\n  var _request$body = request.body,\n      to = _request$body.to,\n      currency = _request$body.currency;\n  var sourceUserDb = db.get('users').find({\n    login: request.session.login\n  });\n  var targetUserDb = db.get('users').find({\n    id: to\n  });\n  var sourceUser = sourceUserDb.value();\n  var targetUser = targetUserDb.value();\n  amount = Number.parseFloat(amount);\n\n  if (Number.isNaN(amount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (amount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно перевести отрицательное число'\n    });\n    return;\n  }\n\n  if (!sourceUser) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (!targetUser) {\n    response.json({\n      success: false,\n      data: 'Получатель не найден'\n    });\n    return;\n  }\n\n  if (sourceUser.balance[currency] < amount) {\n    response.json({\n      success: false,\n      data: 'Не хватает денег для перевода'\n    });\n    return;\n  }\n\n  sourceUser.balance[currency] = (sourceUser.balance[currency] || 0) - amount;\n  targetUser.balance[currency] = (targetUser.balance[currency] || 0) + amount;\n  sourceUserDb.assign(_objectSpread({}, sourceUser)).write();\n  targetUserDb.assign(_objectSpread({}, targetUser)).write();\n  response.json({\n    success: true,\n    data: sourceUserDb.value()\n  });\n});\nrouter.post('/convert', function (request, response) {\n  var _request$body2 = request.body,\n      fromCurrency = _request$body2.fromCurrency,\n      targetCurrency = _request$body2.targetCurrency;\n  var fromAmount = request.body.fromAmount;\n  fromAmount = Number.parseFloat(fromAmount);\n\n  if (Number.isNaN(fromAmount)) {\n    response.json({\n      success: false,\n      data: 'Ошибка при переводе значения в число'\n    });\n    return;\n  }\n\n  if (fromAmount < 0) {\n    response.json({\n      success: false,\n      data: 'Невозможно конвертировать отрицательное число'\n    });\n    return;\n  }\n\n  var userDb = db.get('users').find({\n    login: request.session.login\n  });\n  var user = userDb.value();\n\n  if (!user) {\n    response.json({\n      success: false,\n      data: 'Пользователь не найден'\n    });\n    return;\n  }\n\n  if (user.balance[fromCurrency] < fromAmount) {\n    response.json({\n      success: false,\n      data: \"\\u041D\\u0435 \\u0445\\u0432\\u0430\\u0442\\u0430\\u0435\\u0442 \\u0434\\u0435\\u043D\\u0435\\u0433 \\u0434\\u043B\\u044F \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0430\\u0446\\u0438\\u0438 \\u0438\\u0437 \".concat(fromCurrency, \" \\u0432 \").concat(targetCurrency)\n    });\n    return;\n  }\n\n  if (fromCurrency === targetCurrency) {\n    response.json({\n      success: false,\n      data: 'Нельзя перевести в такую же валюту'\n    });\n    return;\n  }\n\n  (0, _stocks[\"default\"])(function (data) {\n    if (!data.success) {\n      response.json(data);\n      return;\n    }\n\n    var currency = data.data[\"\".concat(fromCurrency, \"_\").concat(targetCurrency)];\n    var countConvertedMoney = fromAmount / currency;\n    user.balance[fromCurrency] -= fromAmount;\n    user.balance[targetCurrency] += countConvertedMoney;\n    userDb.assign(_objectSpread({}, user)).write();\n    response.json({\n      success: true,\n      data: userDb.value()\n    });\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "money.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "FileSync",
        "require",
        "adapter",
        "db",
        "post",
        "request",
        "response",
        "amount",
        "body",
        "currency",
        "Number",
        "parseFloat",
        "isNaN",
        "json",
        "success",
        "data",
        "includes",
        "userDb",
        "get",
        "find",
        "login",
        "session",
        "user",
        "value",
        "countMoney",
        "balance",
        "assign",
        "write",
        "to",
        "sourceUserDb",
        "targetUserDb",
        "id",
        "sourceUser",
        "targetUser",
        "fromCurrency",
        "targetCurrency",
        "fromAmount",
        "countConvertedMoney",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\polni\\Desktop\\diplomJs\\bjs-diplom\\routes",
      "sourcesContent": [
        "import express from 'express';\r\n\r\nimport low from 'lowdb';\r\nimport getStocks from './stocks';\r\n\r\nconst router = express.Router();\r\nconst FileSync = require('lowdb/adapters/FileSync');\r\n\r\nconst adapter = new FileSync('db.json');\r\nconst db = low(adapter);\r\n\r\nrouter.post('/add', (request, response) => {\r\n  let { amount } = request.body;\r\n  const { currency } = request.body;\r\n\r\n  amount = Number.parseFloat(amount);\r\n  if (Number.isNaN(amount)) {\r\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\r\n    return;\r\n  }\r\n\r\n  if (amount < 0) {\r\n    response.json({ success: false, data: 'Невозможно добавить отрицательное число' });\r\n    return;\r\n  }\r\n\r\n  if (!['RUB', 'EUR', 'USD', 'NTC'].includes(currency)) {\r\n    response.json({ success: false, data: 'Такая валюта не существует' });\r\n    return;\r\n  }\r\n\r\n  const userDb = db.get('users').find({ login: request.session.login });\r\n  const user = userDb.value();\r\n\r\n  if (!user) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  const countMoney = (user.balance[currency] || 0) + amount;\r\n  user.balance[currency] = countMoney;\r\n\r\n  userDb.assign({ ...user }).write();\r\n  response.json({ success: true, data: userDb.value() });\r\n});\r\n\r\nrouter.post('/transfer', (request, response) => {\r\n  let { amount } = request.body;\r\n  const { to, currency } = request.body;\r\n  const sourceUserDb = db.get('users').find({ login: request.session.login });\r\n  const targetUserDb = db.get('users').find({ id: to });\r\n  const sourceUser = sourceUserDb.value();\r\n  const targetUser = targetUserDb.value();\r\n\r\n  amount = Number.parseFloat(amount);\r\n  if (Number.isNaN(amount)) {\r\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\r\n    return;\r\n  }\r\n\r\n  if (amount < 0) {\r\n    response.json({ success: false, data: 'Невозможно перевести отрицательное число' });\r\n    return;\r\n  }\r\n\r\n  if (!sourceUser) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  if (!targetUser) {\r\n    response.json({ success: false, data: 'Получатель не найден' });\r\n    return;\r\n  }\r\n\r\n  if (sourceUser.balance[currency] < amount) {\r\n    response.json({ success: false, data: 'Не хватает денег для перевода' });\r\n    return;\r\n  }\r\n\r\n  sourceUser.balance[currency] = (sourceUser.balance[currency] || 0) - amount;\r\n  targetUser.balance[currency] = (targetUser.balance[currency] || 0) + amount;\r\n\r\n  sourceUserDb.assign({ ...sourceUser }).write();\r\n  targetUserDb.assign({ ...targetUser }).write();\r\n\r\n  response.json({ success: true, data: sourceUserDb.value() });\r\n});\r\n\r\nrouter.post('/convert', (request, response) => {\r\n  const { fromCurrency, targetCurrency } = request.body;\r\n  let { fromAmount } = request.body;\r\n\r\n  fromAmount = Number.parseFloat(fromAmount);\r\n  if (Number.isNaN(fromAmount)) {\r\n    response.json({ success: false, data: 'Ошибка при переводе значения в число' });\r\n    return;\r\n  }\r\n\r\n  if (fromAmount < 0) {\r\n    response.json({ success: false, data: 'Невозможно конвертировать отрицательное число' });\r\n    return;\r\n  }\r\n\r\n  const userDb = db.get('users').find({ login: request.session.login });\r\n  const user = userDb.value();\r\n\r\n  if (!user) {\r\n    response.json({ success: false, data: 'Пользователь не найден' });\r\n    return;\r\n  }\r\n\r\n  if (user.balance[fromCurrency] < fromAmount) {\r\n    response.json({\r\n      success: false,\r\n      data: `Не хватает денег для конвертации из ${fromCurrency} в ${targetCurrency}`,\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (fromCurrency === targetCurrency) {\r\n    response.json({ success: false, data: 'Нельзя перевести в такую же валюту' });\r\n    return;\r\n  }\r\n\r\n  getStocks((data) => {\r\n    if (!data.success) {\r\n      response.json(data);\r\n      return;\r\n    }\r\n\r\n    const currency = data.data[`${fromCurrency}_${targetCurrency}`];\r\n    const countConvertedMoney = fromAmount / currency;\r\n    user.balance[fromCurrency] -= fromAmount;\r\n    user.balance[targetCurrency] += countConvertedMoney;\r\n\r\n    userDb.assign({ ...user }).write();\r\n    response.json({ success: true, data: userDb.value() });\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586001349643
  }
}